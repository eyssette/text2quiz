{"version":3,"sources":["../src/index.ts","../../../node_modules/.pnpm/tsup@5.11.13_typescript@4.5.5/node_modules/tsup/assets/cjs_shims.js","../src/utils/log.ts","../src/handle-hot-update.ts","../src/utils/compile.ts","../src/utils/hash.ts","../src/utils/id.ts","../src/utils/options.ts","../src/utils/load-svelte-config.ts","../src/utils/constants.ts","../src/utils/dependencies.ts","../src/utils/esbuild.ts","../src/utils/error.ts","../src/utils/preprocess.ts","../src/utils/sourcemap.ts","../src/utils/vite-plugin-svelte-cache.ts","../src/utils/watch.ts","../src/utils/resolve.ts","../src/utils/optimizer.ts"],"sourcesContent":["import fs from 'fs';\nimport { HmrContext, ModuleNode, Plugin, ResolvedConfig, UserConfig } from 'vite';\nimport { handleHotUpdate } from './handle-hot-update';\nimport { log, logCompilerWarnings } from './utils/log';\nimport { CompileData, createCompileSvelte } from './utils/compile';\nimport { buildIdParser, IdParser, SvelteRequest } from './utils/id';\nimport {\n\tbuildExtraViteConfig,\n\tvalidateInlineOptions,\n\tOptions,\n\tResolvedOptions,\n\tresolveOptions,\n\tpatchResolvedViteConfig,\n\tpreResolveOptions\n} from './utils/options';\nimport { VitePluginSvelteCache } from './utils/vite-plugin-svelte-cache';\n\nimport { ensureWatchedFile, setupWatchers } from './utils/watch';\nimport { resolveViaPackageJsonSvelte } from './utils/resolve';\nimport { PartialResolvedId } from 'rollup';\nimport { toRollupError } from './utils/error';\nimport { handleOptimizeDeps } from './utils/optimizer';\n\nexport function svelte(inlineOptions?: Partial<Options>): Plugin {\n\tif (process.env.DEBUG != null) {\n\t\tlog.setLevel('debug');\n\t}\n\tvalidateInlineOptions(inlineOptions);\n\tconst cache = new VitePluginSvelteCache();\n\tconst pkg_resolve_errors = new Set();\n\t// updated in configResolved hook\n\tlet requestParser: IdParser;\n\tlet options: ResolvedOptions;\n\tlet viteConfig: ResolvedConfig;\n\t/* eslint-disable no-unused-vars */\n\tlet compileSvelte: (\n\t\tsvelteRequest: SvelteRequest,\n\t\tcode: string,\n\t\toptions: Partial<ResolvedOptions>\n\t) => Promise<CompileData>;\n\t/* eslint-enable no-unused-vars */\n\n\tlet resolvedSvelteSSR: Promise<PartialResolvedId | null>;\n\n\treturn {\n\t\tname: 'vite-plugin-svelte',\n\t\t// make sure our resolver runs before vite internal resolver to resolve svelte field correctly\n\t\tenforce: 'pre',\n\t\tasync config(config, configEnv): Promise<Partial<UserConfig>> {\n\t\t\t// setup logger\n\t\t\tif (process.env.DEBUG) {\n\t\t\t\tlog.setLevel('debug');\n\t\t\t} else if (config.logLevel) {\n\t\t\t\tlog.setLevel(config.logLevel);\n\t\t\t}\n\t\t\t// @ts-expect-error temporarily lend the options variable until fixed in configResolved\n\t\t\toptions = await preResolveOptions(inlineOptions, config, configEnv);\n\t\t\t// extra vite config\n\t\t\tconst extraViteConfig = buildExtraViteConfig(options, config, configEnv);\n\t\t\tlog.debug('additional vite config', extraViteConfig);\n\t\t\treturn extraViteConfig;\n\t\t},\n\n\t\tasync configResolved(config) {\n\t\t\toptions = resolveOptions(options, config);\n\t\t\tpatchResolvedViteConfig(config, options);\n\t\t\trequestParser = buildIdParser(options);\n\t\t\tcompileSvelte = createCompileSvelte(options);\n\t\t\tviteConfig = config;\n\t\t\tlog.debug('resolved options', options);\n\t\t},\n\n\t\tasync buildStart() {\n\t\t\tawait handleOptimizeDeps(options, viteConfig);\n\t\t},\n\n\t\tconfigureServer(server) {\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\toptions.server = server;\n\t\t\tsetupWatchers(options, cache, requestParser);\n\t\t},\n\n\t\tload(id, opts) {\n\t\t\t// @ts-expect-error anticipate vite changing second parameter as options object\n\t\t\t// see https://github.com/vitejs/vite/discussions/5109\n\t\t\tconst ssr: boolean = opts === true || opts?.ssr;\n\t\t\tconst svelteRequest = requestParser(id, !!ssr);\n\t\t\tif (svelteRequest) {\n\t\t\t\tconst { filename, query } = svelteRequest;\n\t\t\t\t// virtual css module\n\t\t\t\tif (query.svelte && query.type === 'style') {\n\t\t\t\t\tconst css = cache.getCSS(svelteRequest);\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tlog.debug(`load returns css for ${filename}`);\n\t\t\t\t\t\treturn css;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// prevent vite asset plugin from loading files as url that should be compiled in transform\n\t\t\t\tif (viteConfig.assetsInclude(filename)) {\n\t\t\t\t\tlog.debug(`load returns raw content for ${filename}`);\n\t\t\t\t\treturn fs.readFileSync(filename, 'utf-8');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tasync resolveId(importee, importer, opts) {\n\t\t\tconst ssr = !!opts?.ssr;\n\t\t\tconst svelteRequest = requestParser(importee, ssr);\n\t\t\tif (svelteRequest?.query.svelte) {\n\t\t\t\tif (svelteRequest.query.type === 'style') {\n\t\t\t\t\t// return cssId with root prefix so postcss pipeline of vite finds the directory correctly\n\t\t\t\t\t// see https://github.com/sveltejs/vite-plugin-svelte/issues/14\n\t\t\t\t\tlog.debug(`resolveId resolved virtual css module ${svelteRequest.cssId}`);\n\t\t\t\t\treturn svelteRequest.cssId;\n\t\t\t\t}\n\t\t\t\tlog.debug(`resolveId resolved ${importee}`);\n\t\t\t\treturn importee; // query with svelte tag, an id we generated, no need for further analysis\n\t\t\t}\n\n\t\t\tif (ssr && importee === 'svelte') {\n\t\t\t\tif (!resolvedSvelteSSR) {\n\t\t\t\t\tresolvedSvelteSSR = this.resolve('svelte/ssr', undefined, { skipSelf: true }).then(\n\t\t\t\t\t\t(svelteSSR) => {\n\t\t\t\t\t\t\tlog.debug('resolved svelte to svelte/ssr');\n\t\t\t\t\t\t\treturn svelteSSR;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(err) => {\n\t\t\t\t\t\t\tlog.debug(\n\t\t\t\t\t\t\t\t'failed to resolve svelte to svelte/ssr. Update svelte to a version that exports it',\n\t\t\t\t\t\t\t\terr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn null; // returning null here leads to svelte getting resolved regularly\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn resolvedSvelteSSR;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst resolved = resolveViaPackageJsonSvelte(importee, importer, cache);\n\t\t\t\tif (resolved) {\n\t\t\t\t\tlog.debug(`resolveId resolved ${resolved} via package.json svelte field of ${importee}`);\n\t\t\t\t\treturn resolved;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tpkg_resolve_errors.add(importee);\n\t\t\t}\n\t\t},\n\n\t\tasync transform(code, id, opts) {\n\t\t\tconst ssr = !!opts?.ssr;\n\t\t\tconst svelteRequest = requestParser(id, ssr);\n\t\t\tif (!svelteRequest) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst { filename, query } = svelteRequest;\n\n\t\t\tif (query.svelte) {\n\t\t\t\tif (query.type === 'style') {\n\t\t\t\t\tconst css = cache.getCSS(svelteRequest);\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tlog.debug(`transform returns css for ${filename}`);\n\t\t\t\t\t\treturn css; // TODO return code arg instead? it's the code from load hook.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlog.error('failed to transform tagged svelte request', svelteRequest);\n\t\t\t\tthrow new Error(`failed to transform tagged svelte request for id ${id}`);\n\t\t\t}\n\t\t\tlet compileData;\n\t\t\ttry {\n\t\t\t\tcompileData = await compileSvelte(svelteRequest, code, options);\n\t\t\t} catch (e) {\n\t\t\t\tthrow toRollupError(e, options);\n\t\t\t}\n\t\t\tlogCompilerWarnings(compileData.compiled.warnings, options);\n\t\t\tcache.update(compileData);\n\t\t\tif (compileData.dependencies?.length && options.server) {\n\t\t\t\tcompileData.dependencies.forEach((d) => {\n\t\t\t\t\tensureWatchedFile(options.server!.watcher, d, options.root);\n\t\t\t\t});\n\t\t\t}\n\t\t\tlog.debug(`transform returns compiled js for ${filename}`);\n\t\t\treturn compileData.compiled.js;\n\t\t},\n\n\t\thandleHotUpdate(ctx: HmrContext): void | Promise<Array<ModuleNode> | void> {\n\t\t\tif (!options.hot || !options.emitCss) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst svelteRequest = requestParser(ctx.file, false, ctx.timestamp);\n\t\t\tif (svelteRequest) {\n\t\t\t\treturn handleHotUpdate(compileSvelte, ctx, svelteRequest, cache, options);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * All resolutions done; display warnings wrt `package.json` access.\n\t\t */\n\t\t// TODO generateBundle isn't called by vite, is buildEnd enough or should it be logged once per violation in resolve\n\t\tbuildEnd() {\n\t\t\tif (pkg_resolve_errors.size > 0) {\n\t\t\t\tlog.warn(\n\t\t\t\t\t`vite-plugin-svelte was unable to find package.json of the following packages and wasn't able to resolve via their \"svelte\" field.\n\t\t\t\t\tIf you had difficulties importing svelte components from a package, then please contact the author and ask them to export the package.json file.\n\t\t\t\t\t${Array.from(pkg_resolve_errors, (s) => `- ${s}`).join('\\n')}`.replace(/\\t/g, '')\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport {\n\tOptions,\n\tPreprocessor,\n\tPreprocessorGroup,\n\tCompileOptions,\n\tCssHashGetter,\n\tArrayable,\n\tMarkupPreprocessor,\n\tModuleFormat,\n\tProcessed,\n\tWarning\n} from './utils/options';\n","// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","/* eslint-disable no-unused-vars,no-console */\nimport { cyan, yellow, red } from 'kleur/colors';\nimport debug from 'debug';\nimport { ResolvedOptions, Warning } from './options';\n\nconst levels: string[] = ['debug', 'info', 'warn', 'error', 'silent'];\nconst prefix = 'vite-plugin-svelte';\nconst loggers: { [key: string]: any } = {\n\tdebug: {\n\t\tlog: debug(`vite:${prefix}`),\n\t\tenabled: false,\n\t\tisDebug: true\n\t},\n\tinfo: {\n\t\tcolor: cyan,\n\t\tlog: console.log,\n\t\tenabled: true\n\t},\n\twarn: {\n\t\tcolor: yellow,\n\t\tlog: console.warn,\n\t\tenabled: true\n\t},\n\terror: {\n\t\tcolor: red,\n\t\tlog: console.error,\n\t\tenabled: true\n\t},\n\tsilent: {\n\t\tenabled: false\n\t}\n};\n\nlet _level: string = 'info';\nfunction setLevel(level: string) {\n\tif (level === _level) {\n\t\treturn;\n\t}\n\tconst levelIndex = levels.indexOf(level);\n\tif (levelIndex > -1) {\n\t\t_level = level;\n\t\tfor (let i = 0; i < levels.length; i++) {\n\t\t\tloggers[levels[i]].enabled = i >= levelIndex;\n\t\t}\n\t} else {\n\t\t_log(loggers.error, `invalid log level: ${level} `);\n\t}\n}\n\nfunction _log(logger: any, message: string, payload?: any) {\n\tif (!logger.enabled) {\n\t\treturn;\n\t}\n\tif (logger.isDebug) {\n\t\tpayload !== undefined ? logger.log(message, payload) : logger.log(message);\n\t} else {\n\t\tlogger.log(logger.color(`${new Date().toLocaleTimeString()} [${prefix}] ${message}`));\n\t\tif (payload) {\n\t\t\tlogger.log(payload);\n\t\t}\n\t}\n}\n\nexport interface LogFn {\n\t(message: string, payload?: any): void;\n\tenabled: boolean;\n\tonce: (message: string, payload?: any) => void;\n}\n\nfunction createLogger(level: string): LogFn {\n\tconst logger = loggers[level];\n\tconst logFn: LogFn = _log.bind(null, logger) as LogFn;\n\tconst logged = new Set<String>();\n\tconst once = function (message: string, payload?: any) {\n\t\tif (logged.has(message)) {\n\t\t\treturn;\n\t\t}\n\t\tlogged.add(message);\n\t\tlogFn.apply(null, [message, payload]);\n\t};\n\tObject.defineProperty(logFn, 'enabled', {\n\t\tget() {\n\t\t\treturn logger.enabled;\n\t\t}\n\t});\n\tObject.defineProperty(logFn, 'once', {\n\t\tget() {\n\t\t\treturn once;\n\t\t}\n\t});\n\treturn logFn;\n}\n\nexport const log = {\n\tdebug: createLogger('debug'),\n\tinfo: createLogger('info'),\n\twarn: createLogger('warn'),\n\terror: createLogger('error'),\n\tsetLevel\n};\n\nexport function logCompilerWarnings(warnings: Warning[], options: ResolvedOptions) {\n\tconst { emitCss, onwarn, isBuild } = options;\n\tconst warn = isBuild ? warnBuild : warnDev;\n\tconst notIgnoredWarnings = warnings?.filter((w) => !ignoreCompilerWarning(w, isBuild, emitCss));\n\tconst extraWarnings = buildExtraWarnings(warnings, isBuild);\n\t[...notIgnoredWarnings, ...extraWarnings].forEach((warning) => {\n\t\tif (onwarn) {\n\t\t\tonwarn(warning, warn);\n\t\t} else {\n\t\t\twarn(warning);\n\t\t}\n\t});\n}\n\nfunction ignoreCompilerWarning(\n\twarning: Warning,\n\tisBuild: boolean,\n\temitCss: boolean | undefined\n): boolean {\n\treturn (\n\t\t(!emitCss && warning.code === 'css-unused-selector') || // same as rollup-plugin-svelte\n\t\t(!isBuild && isNoScopableElementWarning(warning))\n\t);\n}\n\nfunction isNoScopableElementWarning(warning: Warning) {\n\t// see https://github.com/sveltejs/vite-plugin-svelte/issues/153\n\treturn warning.code === 'css-unused-selector' && warning.message.includes('\"*\"');\n}\n\nfunction buildExtraWarnings(warnings: Warning[], isBuild: boolean): Warning[] {\n\tconst extraWarnings = [];\n\tif (!isBuild) {\n\t\tconst noScopableElementWarnings = warnings.filter((w) => isNoScopableElementWarning(w));\n\t\tif (noScopableElementWarnings.length > 0) {\n\t\t\t// in case there are multiple, use last one as that is the one caused by our *{} rule\n\t\t\tconst noScopableElementWarning =\n\t\t\t\tnoScopableElementWarnings[noScopableElementWarnings.length - 1];\n\t\t\textraWarnings.push({\n\t\t\t\t...noScopableElementWarning,\n\t\t\t\tcode: 'vite-plugin-svelte-css-no-scopable-elements',\n\t\t\t\tmessage: `No scopable elements found in template. If you're using global styles in the style tag, you should move it into an external stylesheet file and import it in JS. See https://github.com/sveltejs/vite-plugin-svelte/blob/main/docs/faq.md#where-should-i-put-my-global-styles.`\n\t\t\t});\n\t\t}\n\t}\n\treturn extraWarnings;\n}\n\nfunction warnDev(w: Warning) {\n\tlog.info.enabled && log.info(buildExtendedLogMessage(w));\n}\n\nfunction warnBuild(w: Warning) {\n\tlog.warn.enabled && log.warn(buildExtendedLogMessage(w), w.frame);\n}\n\nexport function buildExtendedLogMessage(w: Warning) {\n\tconst parts = [];\n\tif (w.filename) {\n\t\tparts.push(w.filename);\n\t}\n\tif (w.start) {\n\t\tparts.push(':', w.start.line, ':', w.start.column);\n\t}\n\tif (w.message) {\n\t\tif (parts.length > 0) {\n\t\t\tparts.push(' ');\n\t\t}\n\t\tparts.push(w.message);\n\t}\n\treturn parts.join('');\n}\n","import { ModuleNode, HmrContext } from 'vite';\nimport { Code, CompileData } from './utils/compile';\nimport { log, logCompilerWarnings } from './utils/log';\nimport { SvelteRequest } from './utils/id';\nimport { VitePluginSvelteCache } from './utils/vite-plugin-svelte-cache';\nimport { ResolvedOptions } from './utils/options';\n\n/**\n * Vite-specific HMR handling\n */\nexport async function handleHotUpdate(\n\tcompileSvelte: Function,\n\tctx: HmrContext,\n\tsvelteRequest: SvelteRequest,\n\tcache: VitePluginSvelteCache,\n\toptions: ResolvedOptions\n): Promise<ModuleNode[] | void> {\n\tconst { read, server } = ctx;\n\n\tconst cachedJS = cache.getJS(svelteRequest);\n\tif (!cachedJS) {\n\t\t// file hasn't been requested yet (e.g. async component)\n\t\tlog.debug(`handleHotUpdate first call ${svelteRequest.id}`);\n\t\treturn;\n\t}\n\tconst cachedCss = cache.getCSS(svelteRequest);\n\n\tconst content = await read();\n\tconst compileData: CompileData = await compileSvelte(svelteRequest, content, options);\n\tcache.update(compileData);\n\n\tconst affectedModules = new Set<ModuleNode | undefined>();\n\n\tconst cssModule = server.moduleGraph.getModuleById(svelteRequest.cssId);\n\tconst mainModule = server.moduleGraph.getModuleById(svelteRequest.id);\n\tconst cssUpdated = cssModule && cssChanged(cachedCss, compileData.compiled.css);\n\tif (cssUpdated) {\n\t\tlog.debug('handleHotUpdate css changed');\n\t\taffectedModules.add(cssModule);\n\t}\n\tconst jsUpdated =\n\t\tmainModule && jsChanged(cachedJS, compileData.compiled.js, svelteRequest.filename);\n\tif (jsUpdated) {\n\t\tlog.debug('handleHotUpdate js changed');\n\t\taffectedModules.add(mainModule);\n\t}\n\n\tif (!jsUpdated) {\n\t\t// transform won't be called, log warnings here\n\t\tlogCompilerWarnings(compileData.compiled.warnings, options);\n\t}\n\n\tconst result = [...affectedModules].filter(Boolean) as ModuleNode[];\n\n\t// TODO is this enough? see also: https://github.com/vitejs/vite/issues/2274\n\tconst ssrModulesToInvalidate = result.filter((m) => !!m.ssrTransformResult);\n\tif (ssrModulesToInvalidate.length > 0) {\n\t\tlog.debug(`invalidating modules ${ssrModulesToInvalidate.map((m) => m.id).join(', ')}`);\n\t\tssrModulesToInvalidate.forEach((moduleNode) => server.moduleGraph.invalidateModule(moduleNode));\n\t}\n\tif (result.length > 0) {\n\t\tlog.debug(\n\t\t\t`handleHotUpdate for ${svelteRequest.id} result: ${result.map((m) => m.id).join(', ')}`\n\t\t);\n\t}\n\treturn result;\n}\n\nfunction cssChanged(prev?: Code, next?: Code): boolean {\n\treturn !isCodeEqual(prev?.code, next?.code);\n}\n\nfunction jsChanged(prev?: Code, next?: Code, filename?: string): boolean {\n\tconst prevJs = prev?.code;\n\tconst nextJs = next?.code;\n\tconst isStrictEqual = isCodeEqual(prevJs, nextJs);\n\tif (isStrictEqual) {\n\t\treturn false;\n\t}\n\tconst isLooseEqual = isCodeEqual(normalizeJsCode(prevJs), normalizeJsCode(nextJs));\n\tif (!isStrictEqual && isLooseEqual) {\n\t\tlog.warn(\n\t\t\t`ignoring compiler output js change for ${filename} as it is equal to previous output after normalization`\n\t\t);\n\t}\n\treturn !isLooseEqual;\n}\n\nfunction isCodeEqual(prev?: string, next?: string): boolean {\n\tif (!prev && !next) {\n\t\treturn true;\n\t}\n\tif ((!prev && next) || (prev && !next)) {\n\t\treturn false;\n\t}\n\treturn prev === next;\n}\n\n/**\n * remove code that only changes metadata and does not require a js update for the component to keep working\n *\n * 1) add_location() calls. These add location metadata to elements, only useful for tooling like sapper studio\n * 2) ... maybe more (or less) in the future\n * @param code\n */\nfunction normalizeJsCode(code?: string): string | undefined {\n\tif (!code) {\n\t\treturn code;\n\t}\n\treturn code.replace(/\\s*\\badd_location\\s*\\([^)]*\\)\\s*;?/g, '');\n}\n","import { CompileOptions, ResolvedOptions } from './options';\nimport { compile, preprocess, walk } from 'svelte/compiler';\n// @ts-ignore\nimport { createMakeHot } from 'svelte-hmr';\nimport { SvelteRequest } from './id';\nimport { safeBase64Hash } from './hash';\nimport { log } from './log';\n\nconst _createCompileSvelte = (makeHot: Function) =>\n\tasync function compileSvelte(\n\t\tsvelteRequest: SvelteRequest,\n\t\tcode: string,\n\t\toptions: Partial<ResolvedOptions>\n\t): Promise<CompileData> {\n\t\tconst { filename, normalizedFilename, cssId, ssr } = svelteRequest;\n\t\tconst { emitCss = true } = options;\n\t\tconst dependencies = [];\n\n\t\tconst compileOptions: CompileOptions = {\n\t\t\t...options.compilerOptions,\n\t\t\tfilename,\n\t\t\tgenerate: ssr ? 'ssr' : 'dom'\n\t\t};\n\t\tif (options.hot && options.emitCss) {\n\t\t\tconst hash = `s-${safeBase64Hash(normalizedFilename)}`;\n\t\t\tlog.debug(`setting cssHash ${hash} for ${normalizedFilename}`);\n\t\t\tcompileOptions.cssHash = () => hash;\n\t\t}\n\t\tif (ssr && compileOptions.enableSourcemap !== false) {\n\t\t\tif (typeof compileOptions.enableSourcemap === 'object') {\n\t\t\t\tcompileOptions.enableSourcemap.css = false;\n\t\t\t} else {\n\t\t\t\tcompileOptions.enableSourcemap = { js: true, css: false };\n\t\t\t}\n\t\t}\n\n\t\tlet preprocessed;\n\n\t\tif (options.preprocess) {\n\t\t\ttry {\n\t\t\t\tpreprocessed = await preprocess(code, options.preprocess, { filename });\n\t\t\t} catch (e) {\n\t\t\t\te.message = `Error while preprocessing ${filename}${e.message ? ` - ${e.message}` : ''}`;\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (preprocessed.dependencies) dependencies.push(...preprocessed.dependencies);\n\t\t\tif (preprocessed.map) compileOptions.sourcemap = preprocessed.map;\n\t\t}\n\t\tconst finalCode = preprocessed ? preprocessed.code : code;\n\t\tconst dynamicCompileOptions = await options.experimental?.dynamicCompileOptions?.({\n\t\t\tfilename,\n\t\t\tcode: finalCode,\n\t\t\tcompileOptions\n\t\t});\n\t\tif (dynamicCompileOptions && log.debug.enabled) {\n\t\t\tlog.debug(\n\t\t\t\t`dynamic compile options for  ${filename}: ${JSON.stringify(dynamicCompileOptions)}`\n\t\t\t);\n\t\t}\n\t\tconst finalCompileOptions = dynamicCompileOptions\n\t\t\t? {\n\t\t\t\t\t...compileOptions,\n\t\t\t\t\t...dynamicCompileOptions\n\t\t\t  }\n\t\t\t: compileOptions;\n\t\tconst compiled = compile(finalCode, finalCompileOptions);\n\n\t\tif (emitCss && compiled.css.code) {\n\t\t\t// TODO properly update sourcemap?\n\t\t\tcompiled.js.code += `\\nimport ${JSON.stringify(cssId)};\\n`;\n\t\t}\n\n\t\t// only apply hmr when not in ssr context and hot options are set\n\t\tif (!ssr && makeHot) {\n\t\t\tcompiled.js.code = makeHot({\n\t\t\t\tid: filename,\n\t\t\t\tcompiledCode: compiled.js.code,\n\t\t\t\thotOptions: options.hot,\n\t\t\t\tcompiled,\n\t\t\t\toriginalCode: code,\n\t\t\t\tcompileOptions: finalCompileOptions\n\t\t\t});\n\t\t}\n\n\t\tcompiled.js.dependencies = dependencies;\n\n\t\treturn {\n\t\t\tfilename,\n\t\t\tnormalizedFilename,\n\t\t\t// @ts-ignore\n\t\t\tcompiled,\n\t\t\tssr,\n\t\t\tdependencies\n\t\t};\n\t};\n\nfunction buildMakeHot(options: ResolvedOptions) {\n\tconst needsMakeHot = options.hot !== false && options.isServe && !options.isProduction;\n\tif (needsMakeHot) {\n\t\t// @ts-ignore\n\t\tconst hotApi = options?.hot?.hotApi;\n\t\t// @ts-ignore\n\t\tconst adapter = options?.hot?.adapter;\n\t\treturn createMakeHot({\n\t\t\twalk,\n\t\t\thotApi,\n\t\t\tadapter,\n\t\t\thotOptions: { noOverlay: true, ...(options.hot as object) }\n\t\t});\n\t}\n}\n\nexport function createCompileSvelte(options: ResolvedOptions) {\n\tconst makeHot = buildMakeHot(options);\n\treturn _createCompileSvelte(makeHot);\n}\n\nexport interface Code {\n\tcode: string;\n\tmap?: any;\n\tdependencies?: any[];\n}\n\nexport interface Compiled {\n\tjs: Code;\n\tcss: Code;\n\tast: any; // TODO type\n\twarnings: any[]; // TODO type\n\tvars: {\n\t\tname: string;\n\t\texport_name: string;\n\t\tinjected: boolean;\n\t\tmodule: boolean;\n\t\tmutated: boolean;\n\t\treassigned: boolean;\n\t\treferenced: boolean;\n\t\twritable: boolean;\n\t\treferenced_from_script: boolean;\n\t}[];\n\tstats: {\n\t\ttimings: {\n\t\t\ttotal: number;\n\t\t};\n\t};\n}\n\nexport interface CompileData {\n\tfilename: string;\n\tnormalizedFilename: string;\n\tcompiled: Compiled;\n\tssr: boolean | undefined;\n\tdependencies: string[];\n}\n","import * as crypto from 'crypto';\n\nconst hashes = Object.create(null);\n\n//TODO shorter?\nconst hash_length = 12;\n\nexport function safeBase64Hash(input: string) {\n\tif (hashes[input]) {\n\t\treturn hashes[input];\n\t}\n\t//TODO if performance really matters, use a faster one like xx-hash etc.\n\t// should be evenly distributed because short input length and similarities in paths could cause collisions otherwise\n\t// OR DON'T USE A HASH AT ALL, what about a simple counter?\n\tconst md5 = crypto.createHash('md5');\n\tmd5.update(input);\n\tconst hash = toSafe(md5.digest('base64')).substr(0, hash_length);\n\thashes[input] = hash;\n\treturn hash;\n}\n\nconst replacements: { [key: string]: string } = {\n\t'+': '-',\n\t'/': '_',\n\t'=': ''\n};\n\nconst replaceRE = new RegExp(`[${Object.keys(replacements).join('')}]`, 'g');\n\nfunction toSafe(base64: string) {\n\treturn base64.replace(replaceRE, (x) => replacements[x]);\n}\n","/* eslint-disable no-unused-vars */\nimport { createFilter } from '@rollup/pluginutils';\nimport { Arrayable, ResolvedOptions } from './options';\nimport { normalizePath } from 'vite';\nimport * as fs from 'fs';\n\nconst VITE_FS_PREFIX = '/@fs/';\nconst IS_WINDOWS = process.platform === 'win32';\n\nexport type SvelteQueryTypes = 'style' | 'script';\n\nexport interface RequestQuery {\n\t// our own\n\tsvelte?: boolean;\n\ttype?: SvelteQueryTypes;\n\t// vite specific\n\turl?: boolean;\n\traw?: boolean;\n}\n\nexport interface SvelteRequest {\n\tid: string;\n\tcssId: string;\n\tfilename: string;\n\tnormalizedFilename: string;\n\tquery: RequestQuery;\n\ttimestamp: number;\n\tssr: boolean;\n}\n\nfunction splitId(id: string) {\n\tconst parts = id.split(`?`, 2);\n\tconst filename = parts[0];\n\tconst rawQuery = parts[1];\n\treturn { filename, rawQuery };\n}\n\nfunction parseToSvelteRequest(\n\tid: string,\n\tfilename: string,\n\trawQuery: string,\n\troot: string,\n\ttimestamp: number,\n\tssr: boolean\n): SvelteRequest | undefined {\n\tconst query = parseRequestQuery(rawQuery);\n\tif (query.url || query.raw) {\n\t\t// skip requests with special vite tags\n\t\treturn;\n\t}\n\tconst normalizedFilename = normalize(filename, root);\n\tconst cssId = createVirtualImportId(filename, root, 'style');\n\n\treturn {\n\t\tid,\n\t\tfilename,\n\t\tnormalizedFilename,\n\t\tcssId,\n\t\tquery,\n\t\ttimestamp,\n\t\tssr\n\t};\n}\n\nfunction createVirtualImportId(filename: string, root: string, type: SvelteQueryTypes) {\n\tconst parts = ['svelte', `type=${type}`];\n\tif (type === 'style') {\n\t\tparts.push('lang.css');\n\t}\n\tif (existsInRoot(filename, root)) {\n\t\tfilename = root + filename;\n\t} else if (filename.startsWith(VITE_FS_PREFIX)) {\n\t\tfilename = IS_WINDOWS\n\t\t\t? filename.slice(VITE_FS_PREFIX.length) // remove /@fs/ from /@fs/C:/...\n\t\t\t: filename.slice(VITE_FS_PREFIX.length - 1); // remove /@fs from /@fs/home/user\n\t}\n\t// return same virtual id format as vite-plugin-vue eg ...App.svelte?svelte&type=style&lang.css\n\treturn `${filename}?${parts.join('&')}`;\n}\n\nfunction parseRequestQuery(rawQuery: string): RequestQuery {\n\tconst query = Object.fromEntries(new URLSearchParams(rawQuery));\n\tfor (const key in query) {\n\t\tif (query[key] === '') {\n\t\t\t// @ts-ignore\n\t\t\tquery[key] = true;\n\t\t}\n\t}\n\treturn query as RequestQuery;\n}\n\n/**\n * posixify and remove root at start\n *\n * @param filename\n * @param normalizedRoot\n */\nfunction normalize(filename: string, normalizedRoot: string) {\n\treturn stripRoot(normalizePath(filename), normalizedRoot);\n}\n\nfunction existsInRoot(filename: string, root: string) {\n\tif (filename.startsWith(VITE_FS_PREFIX)) {\n\t\treturn false; // vite already tagged it as out of root\n\t}\n\treturn fs.existsSync(root + filename);\n}\n\nfunction stripRoot(normalizedFilename: string, normalizedRoot: string) {\n\treturn normalizedFilename.startsWith(normalizedRoot + '/')\n\t\t? normalizedFilename.slice(normalizedRoot.length)\n\t\t: normalizedFilename;\n}\n\nfunction buildFilter(\n\tinclude: Arrayable<string> | undefined,\n\texclude: Arrayable<string> | undefined,\n\textensions: string[]\n): (filename: string) => boolean {\n\tconst rollupFilter = createFilter(include, exclude);\n\treturn (filename) => rollupFilter(filename) && extensions.some((ext) => filename.endsWith(ext));\n}\n\nexport type IdParser = (id: string, ssr: boolean, timestamp?: number) => SvelteRequest | undefined;\nexport function buildIdParser(options: ResolvedOptions): IdParser {\n\tconst { include, exclude, extensions, root } = options;\n\tconst normalizedRoot = normalizePath(root);\n\tconst filter = buildFilter(include, exclude, extensions!);\n\treturn (id, ssr, timestamp = Date.now()) => {\n\t\tconst { filename, rawQuery } = splitId(id);\n\t\tif (filter(filename)) {\n\t\t\treturn parseToSvelteRequest(id, filename, rawQuery, normalizedRoot, timestamp, ssr);\n\t\t}\n\t};\n}\n","/* eslint-disable no-unused-vars */\nimport {\n\tConfigEnv,\n\tDepOptimizationOptions,\n\tResolvedConfig,\n\tUserConfig,\n\tViteDevServer,\n\tnormalizePath\n} from 'vite';\nimport { log } from './log';\nimport { loadSvelteConfig } from './load-svelte-config';\nimport { SVELTE_HMR_IMPORTS, SVELTE_IMPORTS, SVELTE_RESOLVE_MAIN_FIELDS } from './constants';\n// eslint-disable-next-line node/no-missing-import\nimport { CompileOptions, Warning } from 'svelte/types/compiler/interfaces';\nimport {\n\tMarkupPreprocessor,\n\tPreprocessor,\n\tPreprocessorGroup,\n\tProcessed\n\t// eslint-disable-next-line node/no-missing-import\n} from 'svelte/types/compiler/preprocess';\nimport path from 'path';\nimport { findRootSvelteDependencies, needsOptimization, SvelteDependency } from './dependencies';\nimport { createRequire } from 'module';\nimport { esbuildSveltePlugin, facadeEsbuildSveltePluginName } from './esbuild';\nimport { addExtraPreprocessors } from './preprocess';\n\nconst knownOptions = new Set([\n\t'configFile',\n\t'include',\n\t'exclude',\n\t'extensions',\n\t'emitCss',\n\t'compilerOptions',\n\t'onwarn',\n\t'preprocess',\n\t'hot',\n\t'ignorePluginPreprocessors',\n\t'disableDependencyReinclusion',\n\t'experimental'\n]);\n\nexport function validateInlineOptions(inlineOptions?: Partial<Options>) {\n\tconst invalidKeys = Object.keys(inlineOptions || {}).filter((key) => !knownOptions.has(key));\n\tif (invalidKeys.length) {\n\t\tlog.warn(`invalid plugin options \"${invalidKeys.join(', ')}\" in config`, inlineOptions);\n\t}\n}\n\n// used in config phase, merges the default options, svelte config, and inline options\nexport async function preResolveOptions(\n\tinlineOptions: Partial<Options> = {},\n\tviteUserConfig: UserConfig,\n\tviteEnv: ConfigEnv\n): Promise<PreResolvedOptions> {\n\tconst viteConfigWithResolvedRoot: UserConfig = {\n\t\t...viteUserConfig,\n\t\troot: resolveViteRoot(viteUserConfig)\n\t};\n\tconst defaultOptions: Partial<Options> = {\n\t\textensions: ['.svelte'],\n\t\temitCss: true,\n\t\tcompilerOptions: {\n\t\t\tformat: 'esm'\n\t\t}\n\t};\n\tconst svelteConfig = await loadSvelteConfig(viteConfigWithResolvedRoot, inlineOptions);\n\tconst merged = {\n\t\t...defaultOptions,\n\t\t...svelteConfig,\n\t\t...inlineOptions,\n\t\tcompilerOptions: {\n\t\t\t...defaultOptions?.compilerOptions,\n\t\t\t...svelteConfig?.compilerOptions,\n\t\t\t...inlineOptions?.compilerOptions\n\t\t},\n\t\texperimental: {\n\t\t\t...defaultOptions?.experimental,\n\t\t\t...svelteConfig?.experimental,\n\t\t\t...inlineOptions?.experimental\n\t\t},\n\t\t// extras\n\t\troot: viteConfigWithResolvedRoot.root!,\n\t\tisBuild: viteEnv.command === 'build',\n\t\tisServe: viteEnv.command === 'serve',\n\t\tisDebug: process.env.DEBUG != null\n\t};\n\t// configFile of svelteConfig contains the absolute path it was loaded from,\n\t// prefer it over the possibly relative inline path\n\tif (svelteConfig?.configFile) {\n\t\tmerged.configFile = svelteConfig.configFile;\n\t}\n\treturn merged;\n}\n\n// used in configResolved phase, merges a contextual default config, pre-resolved options, and some preprocessors.\n// also validates the final config.\nexport function resolveOptions(\n\tpreResolveOptions: PreResolvedOptions,\n\tviteConfig: ResolvedConfig\n): ResolvedOptions {\n\tconst defaultOptions: Partial<Options> = {\n\t\thot: viteConfig.isProduction ? false : { injectCss: !preResolveOptions.emitCss },\n\t\tcompilerOptions: {\n\t\t\tcss: !preResolveOptions.emitCss,\n\t\t\tdev: !viteConfig.isProduction\n\t\t}\n\t};\n\tconst merged: ResolvedOptions = {\n\t\t...defaultOptions,\n\t\t...preResolveOptions,\n\t\tcompilerOptions: {\n\t\t\t...defaultOptions.compilerOptions,\n\t\t\t...preResolveOptions.compilerOptions\n\t\t},\n\t\troot: viteConfig.root,\n\t\tisProduction: viteConfig.isProduction\n\t};\n\taddExtraPreprocessors(merged, viteConfig);\n\tenforceOptionsForHmr(merged);\n\tenforceOptionsForProduction(merged);\n\treturn merged;\n}\n\nfunction enforceOptionsForHmr(options: ResolvedOptions) {\n\tif (options.hot) {\n\t\tif (!options.compilerOptions.dev) {\n\t\t\tlog.warn('hmr is enabled but compilerOptions.dev is false, forcing it to true');\n\t\t\toptions.compilerOptions.dev = true;\n\t\t}\n\t\tif (options.emitCss) {\n\t\t\tif (options.hot !== true && options.hot.injectCss) {\n\t\t\t\tlog.warn('hmr and emitCss are enabled but hot.injectCss is true, forcing it to false');\n\t\t\t\toptions.hot.injectCss = false;\n\t\t\t}\n\t\t\tif (options.compilerOptions.css) {\n\t\t\t\tlog.warn(\n\t\t\t\t\t'hmr and emitCss are enabled but compilerOptions.css is true, forcing it to false'\n\t\t\t\t);\n\t\t\t\toptions.compilerOptions.css = false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (options.hot === true || !options.hot.injectCss) {\n\t\t\t\tlog.warn(\n\t\t\t\t\t'hmr with emitCss disabled requires option hot.injectCss to be enabled, forcing it to true'\n\t\t\t\t);\n\t\t\t\tif (options.hot === true) {\n\t\t\t\t\toptions.hot = { injectCss: true };\n\t\t\t\t} else {\n\t\t\t\t\toptions.hot.injectCss = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!options.compilerOptions.css) {\n\t\t\t\tlog.warn(\n\t\t\t\t\t'hmr with emitCss disabled requires compilerOptions.css to be enabled, forcing it to true'\n\t\t\t\t);\n\t\t\t\toptions.compilerOptions.css = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction enforceOptionsForProduction(options: ResolvedOptions) {\n\tif (options.isProduction) {\n\t\tif (options.hot) {\n\t\t\tlog.warn('options.hot is enabled but does not work on production build, forcing it to false');\n\t\t\toptions.hot = false;\n\t\t}\n\t\tif (options.compilerOptions.dev) {\n\t\t\tlog.warn(\n\t\t\t\t'you are building for production but compilerOptions.dev is true, forcing it to false'\n\t\t\t);\n\t\t\toptions.compilerOptions.dev = false;\n\t\t}\n\t}\n}\n\n// vite passes unresolved `root`option to config hook but we need the resolved value, so do it here\n// https://github.com/sveltejs/vite-plugin-svelte/issues/113\n// https://github.com/vitejs/vite/blob/43c957de8a99bb326afd732c962f42127b0a4d1e/packages/vite/src/node/config.ts#L293\nfunction resolveViteRoot(viteConfig: UserConfig): string | undefined {\n\treturn normalizePath(viteConfig.root ? path.resolve(viteConfig.root) : process.cwd());\n}\n\nexport function buildExtraViteConfig(\n\toptions: PreResolvedOptions,\n\tconfig: UserConfig,\n\tconfigEnv: ConfigEnv\n): Partial<UserConfig> {\n\t// extra handling for svelte dependencies in the project\n\tconst svelteDeps = findRootSvelteDependencies(options.root);\n\tconst extraViteConfig: Partial<UserConfig> = {\n\t\tresolve: {\n\t\t\tmainFields: [...SVELTE_RESOLVE_MAIN_FIELDS],\n\t\t\tdedupe: [...SVELTE_IMPORTS, ...SVELTE_HMR_IMPORTS]\n\t\t}\n\t\t// this option is still awaiting a PR in vite to be supported\n\t\t// see https://github.com/sveltejs/vite-plugin-svelte/issues/60\n\t\t// @ts-ignore\n\t\t// knownJsSrcExtensions: options.extensions\n\t};\n\n\tif (configEnv.command === 'serve') {\n\t\textraViteConfig.optimizeDeps = buildOptimizeDepsForSvelte(\n\t\t\tsvelteDeps,\n\t\t\toptions,\n\t\t\tconfig.optimizeDeps\n\t\t);\n\t}\n\n\t// @ts-ignore\n\textraViteConfig.ssr = buildSSROptionsForSvelte(svelteDeps, options, config);\n\n\treturn extraViteConfig;\n}\n\nfunction buildOptimizeDepsForSvelte(\n\tsvelteDeps: SvelteDependency[],\n\toptions: PreResolvedOptions,\n\toptimizeDeps?: DepOptimizationOptions\n): DepOptimizationOptions {\n\t// include svelte imports for optimization unless explicitly excluded\n\tconst include: string[] = [];\n\tconst exclude: string[] = ['svelte-hmr'];\n\tconst isIncluded = (dep: string) => include.includes(dep) || optimizeDeps?.include?.includes(dep);\n\tconst isExcluded = (dep: string) => {\n\t\treturn (\n\t\t\texclude.includes(dep) ||\n\t\t\t// vite optimizeDeps.exclude works for subpackages too\n\t\t\t// see https://github.com/vitejs/vite/blob/c87763c1418d1ba876eae13d139eba83ac6f28b2/packages/vite/src/node/optimizer/scan.ts#L293\n\t\t\toptimizeDeps?.exclude?.some((id: string) => dep === id || id.startsWith(`${dep}/`))\n\t\t);\n\t};\n\tif (!isExcluded('svelte')) {\n\t\tconst svelteImportsToInclude = SVELTE_IMPORTS.filter((x) => x !== 'svelte/ssr'); // not used on clientside\n\t\tlog.debug(\n\t\t\t`adding bare svelte packages to optimizeDeps.include: ${svelteImportsToInclude.join(', ')} `\n\t\t);\n\t\tinclude.push(...svelteImportsToInclude.filter((x) => !isIncluded(x)));\n\t} else {\n\t\tlog.debug('\"svelte\" is excluded in optimizeDeps.exclude, skipped adding it to include.');\n\t}\n\n\t// If we prebundle svelte libraries, we can skip the whole prebundling dance below\n\tif (options.experimental.prebundleSvelteLibraries) {\n\t\treturn {\n\t\t\tinclude,\n\t\t\texclude,\n\t\t\tesbuildOptions: {\n\t\t\t\tplugins: [{ name: facadeEsbuildSveltePluginName, setup: () => {} }]\n\t\t\t}\n\t\t};\n\t}\n\n\t// only svelte component libraries needs to be processed for optimizeDeps, js libraries work fine\n\tsvelteDeps = svelteDeps.filter((dep) => dep.type === 'component-library');\n\n\tconst svelteDepsToExclude = Array.from(new Set(svelteDeps.map((dep) => dep.name))).filter(\n\t\t(dep) => !isIncluded(dep)\n\t);\n\tlog.debug(`automatically excluding found svelte dependencies: ${svelteDepsToExclude.join(', ')}`);\n\texclude.push(...svelteDepsToExclude.filter((x) => !isExcluded(x)));\n\n\tif (options.disableDependencyReinclusion !== true) {\n\t\tconst disabledReinclusions = options.disableDependencyReinclusion || [];\n\t\tif (disabledReinclusions.length > 0) {\n\t\t\tlog.debug(`not reincluding transitive dependencies of`, disabledReinclusions);\n\t\t}\n\t\tconst transitiveDepsToInclude = svelteDeps\n\t\t\t.filter((dep) => !disabledReinclusions.includes(dep.name) && isExcluded(dep.name))\n\t\t\t.flatMap((dep) => {\n\t\t\t\tconst localRequire = createRequire(`${dep.dir}/package.json`);\n\t\t\t\treturn Object.keys(dep.pkg.dependencies || {})\n\t\t\t\t\t.filter((depOfDep) => !isExcluded(depOfDep) && needsOptimization(depOfDep, localRequire))\n\t\t\t\t\t.map((depOfDep) => dep.path.concat(dep.name, depOfDep).join(' > '));\n\t\t\t});\n\t\tlog.debug(\n\t\t\t`reincluding transitive dependencies of excluded svelte dependencies`,\n\t\t\ttransitiveDepsToInclude\n\t\t);\n\t\tinclude.push(...transitiveDepsToInclude);\n\t}\n\n\treturn { include, exclude };\n}\n\nfunction buildSSROptionsForSvelte(\n\tsvelteDeps: SvelteDependency[],\n\toptions: ResolvedOptions,\n\tconfig: UserConfig\n): any {\n\tconst noExternal: string[] = [];\n\n\t// add svelte to ssr.noExternal unless it is present in ssr.external\n\t// so we can resolve it with svelte/ssr\n\tif (options.isBuild && config.build?.ssr) {\n\t\t// @ts-ignore\n\t\tif (!config.ssr?.external?.includes('svelte')) {\n\t\t\tnoExternal.push('svelte');\n\t\t}\n\t} else {\n\t\t// for non-ssr build, we exclude svelte js library deps to make development faster\n\t\t// and also because vite doesn't handle them properly.\n\t\t// see https://github.com/sveltejs/vite-plugin-svelte/issues/168\n\t\t// see https://github.com/vitejs/vite/issues/2579\n\t\tsvelteDeps = svelteDeps.filter((dep) => dep.type === 'component-library');\n\t}\n\n\t// add svelte dependencies to ssr.noExternal unless present in ssr.external or optimizeDeps.include\n\tnoExternal.push(\n\t\t...Array.from(new Set(svelteDeps.map((s) => s.name))).filter((x) => {\n\t\t\t// @ts-ignore\n\t\t\treturn !config.ssr?.external?.includes(x) && !config.optimizeDeps?.include?.includes(x);\n\t\t})\n\t);\n\treturn {\n\t\tnoExternal\n\t};\n}\n\nexport function patchResolvedViteConfig(viteConfig: ResolvedConfig, options: ResolvedOptions) {\n\tconst facadeEsbuildSveltePlugin = viteConfig.optimizeDeps.esbuildOptions?.plugins?.find(\n\t\t(plugin) => plugin.name === facadeEsbuildSveltePluginName\n\t);\n\tif (facadeEsbuildSveltePlugin) {\n\t\tObject.assign(facadeEsbuildSveltePlugin, esbuildSveltePlugin(options));\n\t}\n}\nexport interface Options {\n\t/**\n\t * Path to a svelte config file, either absolute or relative to Vite root\n\t *\n\t * @see https://vitejs.dev/config/#root\n\t */\n\tconfigFile?: string;\n\n\t/**\n\t * A `picomatch` pattern, or array of patterns, which specifies the files the plugin should\n\t * operate on. By default, all svelte files are included.\n\t *\n\t * @see https://github.com/micromatch/picomatch\n\t */\n\tinclude?: Arrayable<string>;\n\n\t/**\n\t * A `picomatch` pattern, or array of patterns, which specifies the files to be ignored by the\n\t * plugin. By default, no files are ignored.\n\t *\n\t * @see https://github.com/micromatch/picomatch\n\t */\n\texclude?: Arrayable<string>;\n\n\t/**\n\t * A list of file extensions to be compiled by Svelte\n\t *\n\t * @default ['.svelte']\n\t */\n\textensions?: string[];\n\n\t/**\n\t * An array of preprocessors to transform the Svelte source code before compilation\n\t *\n\t * @see https://svelte.dev/docs#svelte_preprocess\n\t */\n\tpreprocess?: Arrayable<PreprocessorGroup>;\n\n\t/**\n\t * Emit Svelte styles as virtual CSS files for Vite and other plugins to process\n\t *\n\t * @default true\n\t */\n\temitCss?: boolean;\n\n\t/**\n\t * The options to be passed to the Svelte compiler\n\t *\n\t * @see https://svelte.dev/docs#svelte_compile\n\t */\n\tcompilerOptions?: CompileOptions;\n\n\t/**\n\t * Handles warning emitted from the Svelte compiler\n\t */\n\tonwarn?: (warning: Warning, defaultHandler?: (warning: Warning) => void) => void;\n\n\t/**\n\t * Enable or disable Hot Module Replacement.\n\t *\n\t * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t *\n\t * DO NOT CUSTOMIZE SVELTE-HMR OPTIONS UNLESS YOU KNOW EXACTLY WHAT YOU ARE DOING\n\t *\n\t *                             YOU HAVE BEEN WARNED\n\t *\n\t * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t *\n\t * Set an object to pass custom options to svelte-hmr\n\t *\n\t * @see https://github.com/rixo/svelte-hmr#options\n\t * @default true for development, always false for production\n\t */\n\thot?: boolean | { injectCss?: boolean; [key: string]: any };\n\n\t/**\n\t * Some Vite plugins can contribute additional preprocessors by defining `api.sveltePreprocess`.\n\t * If you don't want to use them, set this to true to ignore them all or use an array of strings\n\t * with plugin names to specify which.\n\t *\n\t * @default false\n\t */\n\tignorePluginPreprocessors?: boolean | string[];\n\n\t/**\n\t * vite-plugin-svelte automatically handles excluding svelte libraries and reinclusion of their dependencies\n\t * in vite.optimizeDeps.\n\t *\n\t * `disableDependencyReinclusion: true` disables all reinclusions\n\t * `disableDependencyReinclusion: ['foo','bar']` disables reinclusions for dependencies of foo and bar\n\t *\n\t * This should be used for hybrid packages that contain both node and browser dependencies, eg Routify\n\t *\n\t * @default false\n\t */\n\tdisableDependencyReinclusion?: boolean | string[];\n\n\t/**\n\t * These options are considered experimental and breaking changes to them can occur in any release\n\t */\n\texperimental?: ExperimentalOptions;\n}\n\n/**\n * These options are considered experimental and breaking changes to them can occur in any release\n */\nexport interface ExperimentalOptions {\n\t/**\n\t * Use extra preprocessors that delegate style and TypeScript preprocessing to native Vite plugins\n\t *\n\t * Do not use together with `svelte-preprocess`!\n\t *\n\t * @default false\n\t */\n\tuseVitePreprocess?: boolean;\n\n\t/**\n\t * Force Vite to pre-bundle Svelte libraries\n\t *\n\t * @default false\n\t */\n\tprebundleSvelteLibraries?: boolean;\n\n\t/**\n\t * If a preprocessor does not provide a sourcemap, a best-effort fallback sourcemap will be provided.\n\t * This option requires `diff-match-patch` to be installed as a peer dependency.\n\t *\n\t * @see https://github.com/google/diff-match-patch\n\t * @default false\n\t */\n\tgenerateMissingPreprocessorSourcemaps?: boolean;\n\n\t/**\n\t * A function to update `compilerOptions` before compilation\n\t *\n\t * `data.filename` - The file to be compiled\n\t * `data.code` - The preprocessed Svelte code\n\t * `data.compileOptions` - The current compiler options\n\t *\n\t * To change part of the compiler options, return an object with the changes you need.\n\t *\n\t * @example\n\t * ```\n\t * ({ filename, compileOptions }) => {\n\t *   // Dynamically set hydration per Svelte file\n\t *   if (compileWithHydratable(filename) && !compileOptions.hydratable) {\n\t *     return { hydratable: true };\n\t *   }\n\t * }\n\t * ```\n\t */\n\tdynamicCompileOptions?: (data: {\n\t\tfilename: string;\n\t\tcode: string;\n\t\tcompileOptions: Partial<CompileOptions>;\n\t}) => Promise<Partial<CompileOptions> | void> | Partial<CompileOptions> | void;\n}\n\nexport interface PreResolvedOptions extends Options {\n\t// these options are non-nullable after resolve\n\tcompilerOptions: CompileOptions;\n\texperimental: ExperimentalOptions;\n\t// extra options\n\troot: string;\n\tisBuild: boolean;\n\tisServe: boolean;\n\tisDebug: boolean;\n}\n\nexport interface ResolvedOptions extends PreResolvedOptions {\n\tisProduction: boolean;\n\tserver?: ViteDevServer;\n}\n\nexport type {\n\tCompileOptions,\n\tProcessed,\n\tMarkupPreprocessor,\n\tPreprocessor,\n\tPreprocessorGroup,\n\tWarning\n};\n\nexport type ModuleFormat = NonNullable<CompileOptions['format']>;\n\nexport type CssHashGetter = NonNullable<CompileOptions['cssHash']>;\n\nexport type Arrayable<T> = T | T[];\n","import { createRequire } from 'module';\nimport path from 'path';\nimport fs from 'fs';\nimport { pathToFileURL } from 'url';\nimport { log } from './log';\nimport { Options } from './options';\nimport { UserConfig } from 'vite';\n\n// used to require cjs config in esm.\n// NOTE dynamic import() cjs technically works, but timestamp query cache bust\n// have no effect, likely because it has another internal cache?\nlet esmRequire: NodeRequire;\n\nexport const knownSvelteConfigNames = [\n\t'svelte.config.js',\n\t'svelte.config.cjs',\n\t'svelte.config.mjs'\n];\n\n// hide dynamic import from ts transform to prevent it turning into a require\n// see https://github.com/microsoft/TypeScript/issues/43329#issuecomment-811606238\n// also use timestamp query to avoid caching on reload\nconst dynamicImportDefault = new Function(\n\t'path',\n\t'return import(path + \"?t=\" + Date.now()).then(m => m.default)'\n);\n\nexport async function loadSvelteConfig(\n\tviteConfig: UserConfig,\n\tinlineOptions: Partial<Options>\n): Promise<Partial<Options> | undefined> {\n\tconst configFile = findConfigToLoad(viteConfig, inlineOptions);\n\tif (configFile) {\n\t\tlet err;\n\t\t// try to use dynamic import for svelte.config.js first\n\t\tif (configFile.endsWith('.js') || configFile.endsWith('.mjs')) {\n\t\t\ttry {\n\t\t\t\tconst result = await dynamicImportDefault(pathToFileURL(configFile).href);\n\t\t\t\tif (result != null) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tconfigFile\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`invalid export in ${configFile}`);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tlog.error(`failed to import config ${configFile}`, e);\n\t\t\t\terr = e;\n\t\t\t}\n\t\t}\n\t\t// cjs or error with dynamic import\n\t\tif (!configFile.endsWith('.mjs')) {\n\t\t\ttry {\n\t\t\t\t// identify which require function to use (esm and cjs mode)\n\t\t\t\tconst _require = import.meta.url\n\t\t\t\t\t? (esmRequire ??= createRequire(import.meta.url))\n\t\t\t\t\t: require;\n\n\t\t\t\t// avoid loading cached version on reload\n\t\t\t\tdelete _require.cache[_require.resolve(configFile)];\n\t\t\t\tconst result = _require(configFile);\n\t\t\t\tif (result != null) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tconfigFile\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`invalid export in ${configFile}`);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tlog.error(`failed to require config ${configFile}`, e);\n\t\t\t\tif (!err) {\n\t\t\t\t\terr = e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// failed to load existing config file\n\t\tthrow err;\n\t}\n}\n\nfunction findConfigToLoad(viteConfig: UserConfig, inlineOptions: Partial<Options>) {\n\tconst root = viteConfig.root || process.cwd();\n\tif (inlineOptions.configFile) {\n\t\tconst abolutePath = path.isAbsolute(inlineOptions.configFile)\n\t\t\t? inlineOptions.configFile\n\t\t\t: path.resolve(root, inlineOptions.configFile);\n\t\tif (!fs.existsSync(abolutePath)) {\n\t\t\tthrow new Error(`failed to find svelte config file ${abolutePath}.`);\n\t\t}\n\t\treturn abolutePath;\n\t} else {\n\t\tconst existingKnownConfigFiles = knownSvelteConfigNames\n\t\t\t.map((candidate) => path.resolve(root, candidate))\n\t\t\t.filter((file) => fs.existsSync(file));\n\t\tif (existingKnownConfigFiles.length === 0) {\n\t\t\tlog.debug(`no svelte config found at ${root}`);\n\t\t\treturn;\n\t\t} else if (existingKnownConfigFiles.length > 1) {\n\t\t\tlog.warn(\n\t\t\t\t`found more than one svelte config file, using ${existingKnownConfigFiles[0]}. you should only have one!`,\n\t\t\t\texistingKnownConfigFiles\n\t\t\t);\n\t\t}\n\t\treturn existingKnownConfigFiles[0];\n\t}\n}\n","const VITE_RESOLVE_MAIN_FIELDS = ['module', 'jsnext:main', 'jsnext'];\n\nexport const SVELTE_RESOLVE_MAIN_FIELDS = ['svelte', ...VITE_RESOLVE_MAIN_FIELDS];\n\nexport const SVELTE_IMPORTS = [\n\t'svelte/animate',\n\t'svelte/easing',\n\t'svelte/internal',\n\t'svelte/motion',\n\t'svelte/ssr',\n\t'svelte/store',\n\t'svelte/transition',\n\t'svelte'\n];\n\nexport const SVELTE_HMR_IMPORTS = [\n\t'svelte-hmr/runtime/hot-api-esm.js',\n\t'svelte-hmr/runtime/proxy-adapter-dom.js',\n\t'svelte-hmr'\n];\n","import { log } from './log';\nimport path from 'path';\nimport fs from 'fs';\nimport { createRequire } from 'module';\n\nexport function findRootSvelteDependencies(root: string, cwdFallback = true): SvelteDependency[] {\n\tlog.debug(`findSvelteDependencies: searching svelte dependencies in ${root}`);\n\tconst pkgFile = path.join(root, 'package.json');\n\tif (!fs.existsSync(pkgFile)) {\n\t\tif (cwdFallback) {\n\t\t\tconst cwd = process.cwd();\n\t\t\tif (root !== cwd) {\n\t\t\t\tlog.debug(`no package.json found in vite root ${root}`);\n\t\t\t\treturn findRootSvelteDependencies(cwd, false);\n\t\t\t}\n\t\t}\n\t\tlog.warn(`no package.json found, findRootSvelteDependencies failed`);\n\t\treturn [];\n\t}\n\n\tconst pkg = parsePkg(root);\n\tif (!pkg) {\n\t\treturn [];\n\t}\n\n\tconst deps = [\n\t\t...Object.keys(pkg.dependencies || {}),\n\t\t...Object.keys(pkg.devDependencies || {})\n\t].filter((dep) => !is_common_without_svelte_field(dep));\n\n\treturn getSvelteDependencies(deps, root);\n}\n\nfunction getSvelteDependencies(\n\tdeps: string[],\n\tpkgDir: string,\n\tpath: string[] = []\n): SvelteDependency[] {\n\tconst result = [];\n\tconst localRequire = createRequire(`${pkgDir}/package.json`);\n\tconst resolvedDeps = deps\n\t\t.map((dep) => resolveDependencyData(dep, localRequire))\n\t\t.filter(Boolean) as DependencyData[];\n\tfor (const { pkg, dir } of resolvedDeps) {\n\t\tconst type = getSvelteDependencyType(pkg);\n\t\tif (!type) continue;\n\t\tresult.push({ name: pkg.name, type, pkg, dir, path });\n\t\t// continue crawling for component libraries so we can optimize them, js libraries are fine\n\t\tif (type === 'component-library' && pkg.dependencies) {\n\t\t\tlet dependencyNames = Object.keys(pkg.dependencies);\n\t\t\tconst circular = dependencyNames.filter((name) => path.includes(name));\n\t\t\tif (circular.length > 0) {\n\t\t\t\tlog.warn.enabled &&\n\t\t\t\t\tlog.warn(\n\t\t\t\t\t\t`skipping circular svelte dependencies in automated vite optimizeDeps handling`,\n\t\t\t\t\t\tcircular.map((x) => path.concat(x).join('>'))\n\t\t\t\t\t);\n\t\t\t\tdependencyNames = dependencyNames.filter((name) => !path.includes(name));\n\t\t\t}\n\t\t\tif (path.length === 3) {\n\t\t\t\tlog.debug.once(`encountered deep svelte dependency tree: ${path.join('>')}`);\n\t\t\t}\n\t\t\tresult.push(...getSvelteDependencies(dependencyNames, dir, path.concat(pkg.name)));\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function resolveDependencyData(\n\tdep: string,\n\tlocalRequire: NodeRequire\n): DependencyData | void {\n\ttry {\n\t\tconst pkgJson = `${dep}/package.json`;\n\t\tconst pkg = localRequire(pkgJson);\n\t\tconst dir = path.dirname(localRequire.resolve(pkgJson));\n\t\treturn { dir, pkg };\n\t} catch (e) {\n\t\tlog.debug.once(`dependency ${dep} does not export package.json`, e);\n\t\t// walk up from default export until we find package.json with name=dep\n\t\ttry {\n\t\t\tlet dir = path.dirname(localRequire.resolve(dep));\n\t\t\twhile (dir) {\n\t\t\t\tconst pkg = parsePkg(dir, true);\n\t\t\t\tif (pkg && pkg.name === dep) {\n\t\t\t\t\treturn { dir, pkg };\n\t\t\t\t}\n\t\t\t\tconst parent = path.dirname(dir);\n\t\t\t\tif (parent === dir) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdir = parent;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlog.debug.once(`error while trying to find package.json of ${dep}`, e);\n\t\t}\n\t}\n\tlog.debug.once(`failed to resolve ${dep}`);\n}\n\nfunction parsePkg(dir: string, silent = false): Pkg | void {\n\tconst pkgFile = path.join(dir, 'package.json');\n\ttry {\n\t\treturn JSON.parse(fs.readFileSync(pkgFile, 'utf-8'));\n\t} catch (e) {\n\t\t!silent && log.warn.enabled && log.warn(`failed to parse ${pkgFile}`, e);\n\t}\n}\n\nfunction getSvelteDependencyType(pkg: Pkg): SvelteDependencyType | undefined {\n\tif (isSvelteComponentLib(pkg)) {\n\t\treturn 'component-library';\n\t} else if (isSvelteLib(pkg)) {\n\t\treturn 'js-library';\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nfunction isSvelteComponentLib(pkg: Pkg) {\n\treturn !!pkg.svelte;\n}\n\nfunction isSvelteLib(pkg: Pkg) {\n\treturn !!pkg.dependencies?.svelte || !!pkg.peerDependencies?.svelte;\n}\n\nconst COMMON_DEPENDENCIES_WITHOUT_SVELTE_FIELD = [\n\t'@lukeed/uuid',\n\t'@sveltejs/vite-plugin-svelte',\n\t'@sveltejs/kit',\n\t'autoprefixer',\n\t'cookie',\n\t'dotenv',\n\t'esbuild',\n\t'eslint',\n\t'jest',\n\t'mdsvex',\n\t'postcss',\n\t'prettier',\n\t'svelte',\n\t'svelte-check',\n\t'svelte-hmr',\n\t'svelte-preprocess',\n\t'tslib',\n\t'typescript',\n\t'vite'\n];\nconst COMMON_PREFIXES_WITHOUT_SVELTE_FIELD = [\n\t'@fontsource/',\n\t'@postcss-plugins/',\n\t'@rollup/',\n\t'@sveltejs/adapter-',\n\t'@types/',\n\t'@typescript-eslint/',\n\t'eslint-',\n\t'jest-',\n\t'postcss-plugin-',\n\t'prettier-plugin-',\n\t'rollup-plugin-',\n\t'vite-plugin-'\n];\n\n/**\n * Test for common dependency names that tell us it is not a package including a svelte field, eg. eslint + plugins.\n *\n * This speeds up the find process as we don't have to try and require the package.json for all of them\n *\n * @param dependency {string}\n * @returns {boolean} true if it is a dependency without a svelte field\n */\nexport function is_common_without_svelte_field(dependency: string): boolean {\n\treturn (\n\t\tCOMMON_DEPENDENCIES_WITHOUT_SVELTE_FIELD.includes(dependency) ||\n\t\tCOMMON_PREFIXES_WITHOUT_SVELTE_FIELD.some(\n\t\t\t(prefix) =>\n\t\t\t\tprefix.startsWith('@')\n\t\t\t\t\t? dependency.startsWith(prefix)\n\t\t\t\t\t: dependency.substring(dependency.lastIndexOf('/') + 1).startsWith(prefix) // check prefix omitting @scope/\n\t\t)\n\t);\n}\n\nexport function needsOptimization(dep: string, localRequire: NodeRequire): boolean {\n\tconst depData = resolveDependencyData(dep, localRequire);\n\tif (!depData) return false;\n\tconst pkg = depData.pkg;\n\t// only optimize if is cjs, using the below as heuristic\n\t// see https://github.com/sveltejs/vite-plugin-svelte/issues/162\n\tconst isCjs = pkg.main && !pkg.module && !pkg.exports;\n\tif (!isCjs) return false;\n\t// ensure entry is js so vite can prebundle it\n\t// see https://github.com/sveltejs/vite-plugin-svelte/issues/233\n\tconst entryExt = path.extname(pkg.main);\n\treturn !entryExt || entryExt === '.js' || entryExt === '.cjs';\n}\n\ninterface DependencyData {\n\tdir: string;\n\tpkg: Pkg;\n}\n\nexport interface SvelteDependency {\n\tname: string;\n\ttype: SvelteDependencyType;\n\tdir: string;\n\tpkg: Pkg;\n\tpath: string[];\n}\n\n// component-library => exports svelte components\n// js-library        => only uses svelte api, no components\nexport type SvelteDependencyType = 'component-library' | 'js-library';\n\nexport interface Pkg {\n\tname: string;\n\tsvelte?: string;\n\tdependencies?: DependencyList;\n\tdevDependencies?: DependencyList;\n\tpeerDependencies?: DependencyList;\n\t[key: string]: any;\n}\n\nexport interface DependencyList {\n\t[key: string]: string;\n}\n","import { promises as fs } from 'fs';\nimport { compile, preprocess } from 'svelte/compiler';\nimport { DepOptimizationOptions } from 'vite';\nimport { Compiled } from './compile';\nimport { log } from './log';\nimport { CompileOptions, ResolvedOptions } from './options';\nimport { toESBuildError } from './error';\n\ntype EsbuildOptions = NonNullable<DepOptimizationOptions['esbuildOptions']>;\ntype EsbuildPlugin = NonNullable<EsbuildOptions['plugins']>[number];\ntype EsbuildPluginBuild = Parameters<EsbuildPlugin['setup']>[0];\n\nexport const facadeEsbuildSveltePluginName = 'vite-plugin-svelte:facade';\n\nexport function esbuildSveltePlugin(options: ResolvedOptions): EsbuildPlugin {\n\treturn {\n\t\tname: 'vite-plugin-svelte:optimize-svelte',\n\t\tsetup(build) {\n\t\t\tdisableVitePrebundleSvelte(build);\n\n\t\t\tconst svelteExtensions = (options.extensions ?? ['.svelte']).map((ext) => ext.slice(1));\n\t\t\tconst svelteFilter = new RegExp(`\\\\.(` + svelteExtensions.join('|') + `)(\\\\?.*)?$`);\n\n\t\t\tbuild.onLoad({ filter: svelteFilter }, async ({ path: filename }) => {\n\t\t\t\tconst code = await fs.readFile(filename, 'utf8');\n\t\t\t\ttry {\n\t\t\t\t\tconst contents = await compileSvelte(options, { filename, code });\n\t\t\t\t\treturn { contents };\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn { errors: [toESBuildError(e, options)] };\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction disableVitePrebundleSvelte(build: EsbuildPluginBuild) {\n\tconst viteDepPrebundlePlugin = build.initialOptions.plugins?.find(\n\t\t(v) => v.name === 'vite:dep-pre-bundle'\n\t);\n\n\tif (!viteDepPrebundlePlugin) return;\n\n\t// Prevent vite:dep-pre-bundle from externalizing svelte files\n\tconst _setup = viteDepPrebundlePlugin.setup.bind(viteDepPrebundlePlugin);\n\tviteDepPrebundlePlugin.setup = function (build) {\n\t\tconst _onResolve = build.onResolve.bind(build);\n\t\tbuild.onResolve = function (options, callback) {\n\t\t\tif (options.filter.source.includes('svelte')) {\n\t\t\t\toptions.filter = new RegExp(\n\t\t\t\t\toptions.filter.source.replace('|svelte', ''),\n\t\t\t\t\toptions.filter.flags\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn _onResolve(options, callback);\n\t\t};\n\t\treturn _setup(build);\n\t};\n}\n\nasync function compileSvelte(\n\toptions: ResolvedOptions,\n\t{ filename, code }: { filename: string; code: string }\n): Promise<string> {\n\tconst compileOptions: CompileOptions = {\n\t\t...options.compilerOptions,\n\t\tcss: true,\n\t\tfilename,\n\t\tformat: 'esm',\n\t\tgenerate: 'dom'\n\t};\n\n\tlet preprocessed;\n\n\tif (options.preprocess) {\n\t\ttry {\n\t\t\tpreprocessed = await preprocess(code, options.preprocess, { filename });\n\t\t} catch (e) {\n\t\t\te.message = `Error while preprocessing ${filename}${e.message ? ` - ${e.message}` : ''}`;\n\t\t\tthrow e;\n\t\t}\n\t\tif (preprocessed.map) compileOptions.sourcemap = preprocessed.map;\n\t}\n\n\tconst finalCode = preprocessed ? preprocessed.code : code;\n\n\tconst dynamicCompileOptions = await options.experimental?.dynamicCompileOptions?.({\n\t\tfilename,\n\t\tcode: finalCode,\n\t\tcompileOptions\n\t});\n\n\tif (dynamicCompileOptions && log.debug.enabled) {\n\t\tlog.debug(`dynamic compile options for  ${filename}: ${JSON.stringify(dynamicCompileOptions)}`);\n\t}\n\n\tconst finalCompileOptions = dynamicCompileOptions\n\t\t? {\n\t\t\t\t...compileOptions,\n\t\t\t\t...dynamicCompileOptions\n\t\t  }\n\t\t: compileOptions;\n\n\tconst compiled = compile(finalCode, finalCompileOptions) as Compiled;\n\n\treturn compiled.js.code + '//# sourceMappingURL=' + compiled.js.map.toUrl();\n}\n","import { RollupError } from 'rollup';\nimport { ResolvedOptions, Warning } from './options';\nimport { buildExtendedLogMessage } from './log';\nimport { PartialMessage } from 'esbuild';\n\n/**\n * convert an error thrown by svelte.compile to a RollupError so that vite displays it in a user friendly way\n * @param error a svelte compiler error, which is a mix of Warning and an error\n * @returns {RollupError} the converted error\n */\nexport function toRollupError(error: Warning & Error, options: ResolvedOptions): RollupError {\n\tconst { filename, frame, start, code, name, stack } = error;\n\tconst rollupError: RollupError = {\n\t\tname, // needed otherwise sveltekit coalesce_to_error turns it into a string\n\t\tid: filename,\n\t\tmessage: buildExtendedLogMessage(error), // include filename:line:column so that it's clickable\n\t\tframe: formatFrameForVite(frame),\n\t\tcode,\n\t\tstack: options.isBuild || options.isDebug || !frame ? stack : ''\n\t};\n\tif (start) {\n\t\trollupError.loc = {\n\t\t\tline: start.line,\n\t\t\tcolumn: start.column,\n\t\t\tfile: filename\n\t\t};\n\t}\n\treturn rollupError;\n}\n\n/**\n * convert an error thrown by svelte.compile to an esbuild PartialMessage\n * @param error a svelte compiler error, which is a mix of Warning and an error\n * @returns {PartialMessage} the converted error\n */\nexport function toESBuildError(error: Warning & Error, options: ResolvedOptions): PartialMessage {\n\tconst { filename, frame, start, stack } = error;\n\tconst partialMessage: PartialMessage = {\n\t\ttext: buildExtendedLogMessage(error)\n\t};\n\tif (start) {\n\t\tpartialMessage.location = {\n\t\t\tline: start.line,\n\t\t\tcolumn: start.column,\n\t\t\tfile: filename,\n\t\t\tlineText: lineFromFrame(start.line, frame) // needed to get a meaningful error message on cli\n\t\t};\n\t}\n\tif (options.isBuild || options.isDebug || !frame) {\n\t\tpartialMessage.detail = stack;\n\t}\n\treturn partialMessage;\n}\n\n/**\n * extract line with number from codeframe\n */\nfunction lineFromFrame(lineNo: number, frame?: string): string {\n\tif (!frame) {\n\t\treturn '';\n\t}\n\tconst lines = frame.split('\\n');\n\tconst errorLine = lines.find((line) => line.trimStart().startsWith(`${lineNo}: `));\n\treturn errorLine ? errorLine.substring(errorLine.indexOf(': ') + 3) : '';\n}\n\n/**\n * vite error overlay expects a specific format to show frames\n * this reformats svelte frame (colon separated, less whitespace)\n * to one that vite displays on overlay ( pipe separated, more whitespace)\n * e.g.\n * ```\n * 1: foo\n * 2: bar;\n *       ^\n * 3: baz\n * ```\n * to\n * ```\n *  1 | foo\n *  2 | bar;\n *         ^\n *  3 | baz\n * ```\n * @see https://github.com/vitejs/vite/blob/96591bf9989529de839ba89958755eafe4c445ae/packages/vite/src/client/overlay.ts#L116\n */\nfunction formatFrameForVite(frame?: string): string {\n\tif (!frame) {\n\t\treturn '';\n\t}\n\treturn frame\n\t\t.split('\\n')\n\t\t.map((line) => (line.match(/^\\s+\\^/) ? '   ' + line : ' ' + line.replace(':', ' | ')))\n\t\t.join('\\n');\n}\n","import {\n\ttransformWithEsbuild,\n\tESBuildOptions,\n\tResolvedConfig,\n\tTransformResult,\n\tPlugin\n} from 'vite';\nimport MagicString from 'magic-string';\nimport { preprocess } from 'svelte/compiler';\nimport { Preprocessor, PreprocessorGroup, Processed, ResolvedOptions } from './options';\nimport { TransformPluginContext } from 'rollup';\nimport { log } from './log';\nimport { buildSourceMap } from './sourcemap';\n\nconst supportedStyleLangs = ['css', 'less', 'sass', 'scss', 'styl', 'stylus', 'postcss'];\n\nconst supportedScriptLangs = ['ts'];\n\nfunction createViteScriptPreprocessor(): Preprocessor {\n\treturn async ({ attributes, content, filename = '' }) => {\n\t\tconst lang = attributes.lang as string;\n\t\tif (!supportedScriptLangs.includes(lang)) return;\n\t\tconst transformResult = await transformWithEsbuild(content, filename, {\n\t\t\tloader: lang as ESBuildOptions['loader'],\n\t\t\ttsconfigRaw: {\n\t\t\t\tcompilerOptions: {\n\t\t\t\t\t// svelte typescript needs this flag to work with type imports\n\t\t\t\t\timportsNotUsedAsValues: 'preserve',\n\t\t\t\t\tpreserveValueImports: true\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\tcode: transformResult.code,\n\t\t\tmap: transformResult.map\n\t\t};\n\t};\n}\n\nfunction createViteStylePreprocessor(config: ResolvedConfig): Preprocessor {\n\tconst pluginName = 'vite:css';\n\tconst plugin = config.plugins.find((p) => p.name === pluginName);\n\tif (!plugin) {\n\t\tthrow new Error(`failed to find plugin ${pluginName}`);\n\t}\n\tif (!plugin.transform) {\n\t\tthrow new Error(`plugin ${pluginName} has no transform`);\n\t}\n\tconst pluginTransform = plugin.transform!.bind(null as unknown as TransformPluginContext);\n\treturn async ({ attributes, content, filename = '' }) => {\n\t\tconst lang = attributes.lang as string;\n\t\tif (!supportedStyleLangs.includes(lang)) return;\n\t\tconst moduleId = `${filename}.${lang}`;\n\t\tconst transformResult: TransformResult = (await pluginTransform(\n\t\t\tcontent,\n\t\t\tmoduleId\n\t\t)) as TransformResult;\n\t\t// patch sourcemap source to point back to original filename\n\t\tif (transformResult.map?.sources?.[0] === moduleId) {\n\t\t\ttransformResult.map.sources[0] = filename;\n\t\t}\n\t\treturn {\n\t\t\tcode: transformResult.code,\n\t\t\tmap: transformResult.map ?? undefined\n\t\t};\n\t};\n}\n\nfunction createVitePreprocessorGroup(config: ResolvedConfig): PreprocessorGroup {\n\treturn {\n\t\tmarkup({ content, filename }) {\n\t\t\treturn preprocess(\n\t\t\t\tcontent,\n\t\t\t\t{\n\t\t\t\t\tscript: createViteScriptPreprocessor(),\n\t\t\t\t\tstyle: createViteStylePreprocessor(config)\n\t\t\t\t},\n\t\t\t\t{ filename }\n\t\t\t);\n\t\t}\n\t} as PreprocessorGroup;\n}\n\n/**\n * this appends a *{} rule to component styles to force the svelte compiler to add style classes to all nodes\n * That means adding/removing class rules from <style> node won't trigger js updates as the scope classes are not changed\n *\n * only used during dev with enabled css hmr\n */\nfunction createInjectScopeEverythingRulePreprocessorGroup(): PreprocessorGroup {\n\treturn {\n\t\tstyle({ content, filename }) {\n\t\t\tconst s = new MagicString(content);\n\t\t\ts.append(' *{}');\n\t\t\treturn {\n\t\t\t\tcode: s.toString(),\n\t\t\t\tmap: s.generateDecodedMap({ source: filename, hires: true })\n\t\t\t};\n\t\t}\n\t};\n}\n\nfunction buildExtraPreprocessors(options: ResolvedOptions, config: ResolvedConfig) {\n\tconst prependPreprocessors: PreprocessorGroup[] = [];\n\tconst appendPreprocessors: PreprocessorGroup[] = [];\n\n\tif (options.experimental?.useVitePreprocess) {\n\t\tlog.debug('adding vite preprocessor');\n\t\tprependPreprocessors.push(createVitePreprocessorGroup(config));\n\t}\n\n\t// @ts-ignore\n\tconst pluginsWithPreprocessorsDeprecated = config.plugins.filter((p) => p?.sveltePreprocess);\n\tif (pluginsWithPreprocessorsDeprecated.length > 0) {\n\t\tlog.warn(\n\t\t\t`The following plugins use the deprecated 'plugin.sveltePreprocess' field. Please contact their maintainers and ask them to move it to 'plugin.api.sveltePreprocess': ${pluginsWithPreprocessorsDeprecated\n\t\t\t\t.map((p) => p.name)\n\t\t\t\t.join(', ')}`\n\t\t);\n\t\t// patch plugin to avoid breaking\n\t\tpluginsWithPreprocessorsDeprecated.forEach((p) => {\n\t\t\tif (!p.api) {\n\t\t\t\tp.api = {};\n\t\t\t}\n\t\t\tif (p.api.sveltePreprocess === undefined) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tp.api.sveltePreprocess = p.sveltePreprocess;\n\t\t\t} else {\n\t\t\t\tlog.error(\n\t\t\t\t\t`ignoring plugin.sveltePreprocess of ${p.name} because it already defined plugin.api.sveltePreprocess.`\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst pluginsWithPreprocessors: Plugin[] = config.plugins.filter((p) => p?.api?.sveltePreprocess);\n\tconst ignored: Plugin[] = [],\n\t\tincluded: Plugin[] = [];\n\tfor (const p of pluginsWithPreprocessors) {\n\t\tif (\n\t\t\toptions.ignorePluginPreprocessors === true ||\n\t\t\t(Array.isArray(options.ignorePluginPreprocessors) &&\n\t\t\t\toptions.ignorePluginPreprocessors?.includes(p.name))\n\t\t) {\n\t\t\tignored.push(p);\n\t\t} else {\n\t\t\tincluded.push(p);\n\t\t}\n\t}\n\tif (ignored.length > 0) {\n\t\tlog.debug(\n\t\t\t`Ignoring svelte preprocessors defined by these vite plugins: ${ignored\n\t\t\t\t.map((p) => p.name)\n\t\t\t\t.join(', ')}`\n\t\t);\n\t}\n\tif (included.length > 0) {\n\t\tlog.debug(\n\t\t\t`Adding svelte preprocessors defined by these vite plugins: ${included\n\t\t\t\t.map((p) => p.name)\n\t\t\t\t.join(', ')}`\n\t\t);\n\t\tappendPreprocessors.push(...pluginsWithPreprocessors.map((p) => p.api.sveltePreprocess));\n\t}\n\n\tif (options.hot && options.emitCss) {\n\t\tappendPreprocessors.push(createInjectScopeEverythingRulePreprocessorGroup());\n\t}\n\n\treturn { prependPreprocessors, appendPreprocessors };\n}\n\nexport function addExtraPreprocessors(options: ResolvedOptions, config: ResolvedConfig) {\n\tconst { prependPreprocessors, appendPreprocessors } = buildExtraPreprocessors(options, config);\n\tif (prependPreprocessors.length > 0 || appendPreprocessors.length > 0) {\n\t\tif (!options.preprocess) {\n\t\t\toptions.preprocess = [...prependPreprocessors, ...appendPreprocessors];\n\t\t} else if (Array.isArray(options.preprocess)) {\n\t\t\toptions.preprocess.unshift(...prependPreprocessors);\n\t\t\toptions.preprocess.push(...appendPreprocessors);\n\t\t} else {\n\t\t\toptions.preprocess = [...prependPreprocessors, options.preprocess, ...appendPreprocessors];\n\t\t}\n\t}\n\tconst generateMissingSourceMaps = !!options.experimental?.generateMissingPreprocessorSourcemaps;\n\tif (options.preprocess && generateMissingSourceMaps) {\n\t\toptions.preprocess = Array.isArray(options.preprocess)\n\t\t\t? options.preprocess.map((p, i) => validateSourceMapOutputWrapper(p, i))\n\t\t\t: validateSourceMapOutputWrapper(options.preprocess, 0);\n\t}\n}\n\nfunction validateSourceMapOutputWrapper(group: PreprocessorGroup, i: number): PreprocessorGroup {\n\tconst wrapper: PreprocessorGroup = {};\n\n\tfor (const [processorType, processorFn] of Object.entries(group) as Array<\n\t\t// eslint-disable-next-line no-unused-vars\n\t\t[keyof PreprocessorGroup, (options: { filename?: string; content: string }) => Processed]\n\t>) {\n\t\twrapper[processorType] = async (options) => {\n\t\t\tconst result = await processorFn(options);\n\n\t\t\tif (result && result.code !== options.content) {\n\t\t\t\tlet invalidMap = false;\n\t\t\t\tif (!result.map) {\n\t\t\t\t\tinvalidMap = true;\n\t\t\t\t\tlog.warn.enabled &&\n\t\t\t\t\t\tlog.warn.once(\n\t\t\t\t\t\t\t`preprocessor at index ${i} did not return a sourcemap for ${processorType} transform`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfilename: options.filename,\n\t\t\t\t\t\t\t\ttype: processorType,\n\t\t\t\t\t\t\t\tprocessor: processorFn.toString()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t} else if ((result.map as any)?.mappings === '') {\n\t\t\t\t\tinvalidMap = true;\n\t\t\t\t\tlog.warn.enabled &&\n\t\t\t\t\t\tlog.warn.once(\n\t\t\t\t\t\t\t`preprocessor at index ${i} returned an invalid empty sourcemap for ${processorType} transform`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfilename: options.filename,\n\t\t\t\t\t\t\t\ttype: processorType,\n\t\t\t\t\t\t\t\tprocessor: processorFn.toString()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (invalidMap) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst map = await buildSourceMap(options.content, result.code, options.filename);\n\t\t\t\t\t\tif (map) {\n\t\t\t\t\t\t\tlog.debug.enabled &&\n\t\t\t\t\t\t\t\tlog.debug(\n\t\t\t\t\t\t\t\t\t`adding generated sourcemap to preprocesor result for ${options.filename}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresult.map = map;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlog.error(`failed to build sourcemap`, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t}\n\n\treturn wrapper;\n}\n","import MagicString, { MagicStringOptions } from 'magic-string';\nimport { log } from './log';\n\nexport async function buildMagicString(\n\tfrom: string,\n\tto: string,\n\toptions?: MagicStringOptions\n): Promise<MagicString | null> {\n\tlet diff_match_patch, DIFF_DELETE: number, DIFF_INSERT: number;\n\ttry {\n\t\tconst dmpPkg = await import('diff-match-patch');\n\t\tdiff_match_patch = dmpPkg.diff_match_patch;\n\t\tDIFF_INSERT = dmpPkg.DIFF_INSERT;\n\t\tDIFF_DELETE = dmpPkg.DIFF_DELETE;\n\t} catch (e) {\n\t\tlog.error.once(\n\t\t\t'Failed to import optional dependency \"diff-match-patch\". Please install it to enable generated sourcemaps.'\n\t\t);\n\t\treturn null;\n\t}\n\n\tconst dmp = new diff_match_patch();\n\tconst diffs = dmp.diff_main(from, to);\n\tdmp.diff_cleanupSemantic(diffs);\n\tconst m = new MagicString(from, options);\n\tlet pos = 0;\n\tfor (let i = 0; i < diffs.length; i++) {\n\t\tconst diff = diffs[i];\n\t\tconst nextDiff = diffs[i + 1];\n\t\tif (diff[0] === DIFF_DELETE) {\n\t\t\tif (nextDiff?.[0] === DIFF_INSERT) {\n\t\t\t\t// delete followed by insert, use overwrite and skip ahead\n\t\t\t\tm.overwrite(pos, pos + diff[1].length, nextDiff[1]);\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tm.remove(pos, pos + diff[1].length);\n\t\t\t}\n\t\t\tpos += diff[1].length;\n\t\t} else if (diff[0] === DIFF_INSERT) {\n\t\t\tif (nextDiff) {\n\t\t\t\tm.appendRight(pos, diff[1]);\n\t\t\t} else {\n\t\t\t\tm.append(diff[1]);\n\t\t\t}\n\t\t} else {\n\t\t\t// unchanged block, advance pos\n\t\t\tpos += diff[1].length;\n\t\t}\n\t}\n\t// at this point m.toString() === to\n\treturn m;\n}\n\nexport async function buildSourceMap(from: string, to: string, filename?: string) {\n\t// @ts-ignore\n\tconst m = await buildMagicString(from, to, { filename });\n\treturn m ? m.generateDecodedMap({ source: filename, hires: true, includeContent: false }) : null;\n}\n","import { SvelteRequest } from './id';\nimport { Code, CompileData } from './compile';\n\nexport class VitePluginSvelteCache {\n\tprivate _css = new Map<string, Code>();\n\tprivate _js = new Map<string, Code>();\n\tprivate _dependencies = new Map<string, string[]>();\n\tprivate _dependants = new Map<string, Set<string>>();\n\tprivate _resolvedSvelteFields = new Map<string, string>();\n\n\tpublic update(compileData: CompileData) {\n\t\tthis.updateCSS(compileData);\n\t\tthis.updateJS(compileData);\n\t\tthis.updateDependencies(compileData);\n\t}\n\n\tprivate updateCSS(compileData: CompileData) {\n\t\tthis._css.set(compileData.normalizedFilename, compileData.compiled.css);\n\t}\n\n\tprivate updateJS(compileData: CompileData) {\n\t\tif (!compileData.ssr) {\n\t\t\t// do not cache SSR js\n\t\t\tthis._js.set(compileData.normalizedFilename, compileData.compiled.js);\n\t\t}\n\t}\n\n\tprivate updateDependencies(compileData: CompileData) {\n\t\tconst id = compileData.normalizedFilename;\n\t\tconst prevDependencies = this._dependencies.get(id) || [];\n\t\tconst dependencies = compileData.dependencies;\n\t\tthis._dependencies.set(id, dependencies);\n\t\tconst removed = prevDependencies.filter((d) => !dependencies.includes(d));\n\t\tconst added = dependencies.filter((d) => !prevDependencies.includes(d));\n\t\tadded.forEach((d) => {\n\t\t\tif (!this._dependants.has(d)) {\n\t\t\t\tthis._dependants.set(d, new Set<string>());\n\t\t\t}\n\t\t\tthis._dependants.get(d)!.add(compileData.filename);\n\t\t});\n\t\tremoved.forEach((d) => {\n\t\t\tthis._dependants.get(d)!.delete(compileData.filename);\n\t\t});\n\t}\n\n\tpublic remove(svelteRequest: SvelteRequest): boolean {\n\t\tconst id = svelteRequest.normalizedFilename;\n\t\tlet removed = false;\n\t\tif (this._js.delete(id)) {\n\t\t\tremoved = true;\n\t\t}\n\t\tif (this._css.delete(id)) {\n\t\t\tremoved = true;\n\t\t}\n\t\tconst dependencies = this._dependencies.get(id);\n\t\tif (dependencies) {\n\t\t\tremoved = true;\n\t\t\tdependencies.forEach((d) => {\n\t\t\t\tconst dependants = this._dependants.get(d);\n\t\t\t\tif (dependants && dependants.has(svelteRequest.filename)) {\n\t\t\t\t\tdependants.delete(svelteRequest.filename);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._dependencies.delete(id);\n\t\t}\n\t\treturn removed;\n\t}\n\n\tpublic getCSS(svelteRequest: SvelteRequest) {\n\t\treturn this._css.get(svelteRequest.normalizedFilename);\n\t}\n\n\tpublic getJS(svelteRequest: SvelteRequest) {\n\t\tif (!svelteRequest.ssr) {\n\t\t\t// SSR js isn't cached\n\t\t\treturn this._js.get(svelteRequest.normalizedFilename);\n\t\t}\n\t}\n\n\tpublic getDependants(path: string): string[] {\n\t\tconst dependants = this._dependants.get(path);\n\t\treturn dependants ? [...dependants] : [];\n\t}\n\n\tpublic getResolvedSvelteField(name: string, importer?: string): string | void {\n\t\treturn this._resolvedSvelteFields.get(this._getResolvedSvelteFieldKey(name, importer));\n\t}\n\n\tpublic setResolvedSvelteField(\n\t\timportee: string,\n\t\timporter: string | undefined = undefined,\n\t\tresolvedSvelte: string\n\t) {\n\t\tthis._resolvedSvelteFields.set(\n\t\t\tthis._getResolvedSvelteFieldKey(importee, importer),\n\t\t\tresolvedSvelte\n\t\t);\n\t}\n\n\tprivate _getResolvedSvelteFieldKey(importee: string, importer?: string): string {\n\t\treturn importer ? `${importer} > ${importee}` : importee;\n\t}\n}\n","import { VitePluginSvelteCache } from './vite-plugin-svelte-cache';\nimport fs from 'fs';\nimport { log } from './log';\nimport { IdParser } from './id';\nimport { ResolvedOptions } from './options';\nimport { knownSvelteConfigNames } from './load-svelte-config';\nimport path from 'path';\nimport { FSWatcher } from 'vite';\n\nexport function setupWatchers(\n\toptions: ResolvedOptions,\n\tcache: VitePluginSvelteCache,\n\trequestParser: IdParser\n) {\n\tconst { server, configFile: svelteConfigFile } = options;\n\tif (!server) {\n\t\treturn;\n\t}\n\tconst { watcher, ws } = server;\n\tconst { root, server: serverConfig } = server.config;\n\n\tconst emitChangeEventOnDependants = (filename: string) => {\n\t\tconst dependants = cache.getDependants(filename);\n\t\tdependants.forEach((dependant) => {\n\t\t\tif (fs.existsSync(dependant)) {\n\t\t\t\tlog.debug(\n\t\t\t\t\t`emitting virtual change event for \"${dependant}\" because depdendency \"${filename}\" changed`\n\t\t\t\t);\n\t\t\t\twatcher.emit('change', dependant);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst removeUnlinkedFromCache = (filename: string) => {\n\t\tconst svelteRequest = requestParser(filename, false);\n\t\tif (svelteRequest) {\n\t\t\tconst removedFromCache = cache.remove(svelteRequest);\n\t\t\tif (removedFromCache) {\n\t\t\t\tlog.debug(`cleared VitePluginSvelteCache for deleted file ${filename}`);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst triggerViteRestart = (filename: string) => {\n\t\tif (serverConfig.middlewareMode) {\n\t\t\t// in middlewareMode we can't restart the server automatically\n\t\t\t// show the user an overlay instead\n\t\t\tconst message =\n\t\t\t\t'Svelte config change detected, restart your dev process to apply the changes.';\n\t\t\tlog.info(message, filename);\n\t\t\tws.send({\n\t\t\t\ttype: 'error',\n\t\t\t\terr: { message, stack: '', plugin: 'vite-plugin-svelte', id: filename }\n\t\t\t});\n\t\t} else {\n\t\t\tlog.info(`svelte config changed: restarting vite server. - file: ${filename}`);\n\t\t\tserver.restart();\n\t\t}\n\t};\n\n\tconst possibleSvelteConfigs = knownSvelteConfigNames.map((cfg) => path.join(root, cfg));\n\tconst restartOnConfigAdd = (filename: string) => {\n\t\tif (possibleSvelteConfigs.includes(filename)) {\n\t\t\ttriggerViteRestart(filename);\n\t\t}\n\t};\n\n\tconst restartOnConfigChange = (filename: string) => {\n\t\tif (filename === svelteConfigFile) {\n\t\t\ttriggerViteRestart(filename);\n\t\t}\n\t};\n\n\t// collection of watcher listeners by event\n\tconst listenerCollection = {\n\t\tadd: [] as Array<Function>,\n\t\tchange: [emitChangeEventOnDependants],\n\t\tunlink: [removeUnlinkedFromCache, emitChangeEventOnDependants]\n\t};\n\tif (svelteConfigFile) {\n\t\tlistenerCollection.change.push(restartOnConfigChange);\n\t\tlistenerCollection.unlink.push(restartOnConfigChange);\n\t} else {\n\t\tlistenerCollection.add.push(restartOnConfigAdd);\n\t}\n\n\tObject.entries(listenerCollection).forEach(([evt, listeners]) => {\n\t\tif (listeners.length > 0) {\n\t\t\twatcher.on(evt, (filename) => listeners.forEach((listener) => listener(filename)));\n\t\t}\n\t});\n}\n// taken from vite utils\nexport function ensureWatchedFile(watcher: FSWatcher, file: string | null, root: string): void {\n\tif (\n\t\tfile &&\n\t\t// only need to watch if out of root\n\t\t!file.startsWith(root + '/') &&\n\t\t// some rollup plugins use null bytes for private resolved Ids\n\t\t!file.includes('\\0') &&\n\t\tfs.existsSync(file)\n\t) {\n\t\t// resolve file to normalized system path\n\t\twatcher.add(path.resolve(file));\n\t}\n}\n","import path from 'path';\nimport { builtinModules, createRequire } from 'module';\nimport { is_common_without_svelte_field, resolveDependencyData } from './dependencies';\nimport { VitePluginSvelteCache } from './vite-plugin-svelte-cache';\n\nexport function resolveViaPackageJsonSvelte(\n\timportee: string,\n\timporter: string | undefined,\n\tcache: VitePluginSvelteCache\n): string | void {\n\tif (\n\t\timporter &&\n\t\tisBareImport(importee) &&\n\t\t!isNodeInternal(importee) &&\n\t\t!is_common_without_svelte_field(importee)\n\t) {\n\t\tconst cached = cache.getResolvedSvelteField(importee, importer);\n\t\tif (cached) {\n\t\t\treturn cached;\n\t\t}\n\t\tconst localRequire = createRequire(importer);\n\t\tconst pkgData = resolveDependencyData(importee, localRequire);\n\t\tif (pkgData) {\n\t\t\tconst { pkg, dir } = pkgData;\n\t\t\tif (pkg.svelte) {\n\t\t\t\tconst result = path.resolve(dir, pkg.svelte);\n\t\t\t\tcache.setResolvedSvelteField(importee, importer, result);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(`failed to resolve package.json of ${importee} imported by ${importer}`);\n\t\t}\n\t}\n}\n\nfunction isNodeInternal(importee: string) {\n\treturn importee.startsWith('node:') || builtinModules.includes(importee);\n}\n\nfunction isBareImport(importee: string): boolean {\n\tif (\n\t\t!importee ||\n\t\timportee[0] === '.' ||\n\t\timportee[0] === '\\0' ||\n\t\timportee.includes(':') ||\n\t\tpath.isAbsolute(importee)\n\t) {\n\t\treturn false;\n\t}\n\tconst parts = importee.split('/');\n\tswitch (parts.length) {\n\t\tcase 1:\n\t\t\treturn true;\n\t\tcase 2:\n\t\t\treturn parts[0].startsWith('@');\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n","import fs from 'fs';\nimport path from 'path';\nimport { optimizeDeps, ResolvedConfig } from 'vite';\nimport { ResolvedOptions } from './options';\n\n// List of options that changes the prebundling result\nconst PREBUNDLE_SENSITIVE_OPTIONS: (keyof ResolvedOptions)[] = [\n\t'compilerOptions',\n\t'configFile',\n\t'experimental',\n\t'extensions',\n\t'ignorePluginPreprocessors',\n\t'preprocess'\n];\n\nexport async function handleOptimizeDeps(options: ResolvedOptions, viteConfig: ResolvedConfig) {\n\tif (!options.experimental.prebundleSvelteLibraries || !viteConfig.cacheDir) return;\n\n\tconst viteMetadataPath = path.resolve(viteConfig.cacheDir, '_metadata.json');\n\n\tif (!fs.existsSync(viteMetadataPath)) return;\n\n\tconst svelteMetadataPath = path.resolve(viteConfig.cacheDir, '_svelte_metadata.json');\n\tconst currentSvelteMetadata = JSON.stringify(generateSvelteMetadata(options), (_, value) => {\n\t\treturn typeof value === 'function' ? value.toString() : value;\n\t});\n\n\tif (fs.existsSync(svelteMetadataPath)) {\n\t\tconst existingSvelteMetadata = fs.readFileSync(svelteMetadataPath, 'utf8');\n\t\tif (existingSvelteMetadata === currentSvelteMetadata) return;\n\t}\n\n\tawait optimizeDeps(viteConfig, true);\n\tfs.writeFileSync(svelteMetadataPath, currentSvelteMetadata);\n}\n\nfunction generateSvelteMetadata(options: ResolvedOptions) {\n\tconst metadata: Record<string, any> = {};\n\tfor (const key of PREBUNDLE_SENSITIVE_OPTIONS) {\n\t\tmetadata[key] = options[key];\n\t}\n\treturn metadata;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACKA,IAAM,mBAAmB,MACvB,OAAO,aAAa,cAChB,IAAI,IAAI,UAAU,YAAY,OAC7B,SAAS,iBAAiB,SAAS,cAAc,OAClD,IAAI,IAAI,WAAW,SAAS,SAAS;AAEpC,IAAM,gBAAgC;;;ADX7C,iBAAe;;;AECf,oBAAkC;AAClC,mBAAkB;AAGlB,IAAM,SAAmB,CAAC,SAAS,QAAQ,QAAQ,SAAS;AAC5D,IAAM,SAAS;AACf,IAAM,UAAkC;AAAA,EACvC,OAAO;AAAA,IACN,KAAK,0BAAM,QAAQ;AAAA,IACnB,SAAS;AAAA,IACT,SAAS;AAAA;AAAA,EAEV,MAAM;AAAA,IACL,OAAO;AAAA,IACP,KAAK,QAAQ;AAAA,IACb,SAAS;AAAA;AAAA,EAEV,MAAM;AAAA,IACL,OAAO;AAAA,IACP,KAAK,QAAQ;AAAA,IACb,SAAS;AAAA;AAAA,EAEV,OAAO;AAAA,IACN,OAAO;AAAA,IACP,KAAK,QAAQ;AAAA,IACb,SAAS;AAAA;AAAA,EAEV,QAAQ;AAAA,IACP,SAAS;AAAA;AAAA;AAIX,IAAI,SAAiB;AACrB,kBAAkB,OAAe;AAChC,MAAI,UAAU,QAAQ;AACrB;AAAA;AAED,QAAM,aAAa,OAAO,QAAQ;AAClC,MAAI,aAAa,IAAI;AACpB,aAAS;AACT,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACvC,cAAQ,OAAO,IAAI,UAAU,KAAK;AAAA;AAAA,SAE7B;AACN,SAAK,QAAQ,OAAO,sBAAsB;AAAA;AAAA;AAI5C,cAAc,QAAa,SAAiB,SAAe;AAC1D,MAAI,CAAC,OAAO,SAAS;AACpB;AAAA;AAED,MAAI,OAAO,SAAS;AACnB,gBAAY,SAAY,OAAO,IAAI,SAAS,WAAW,OAAO,IAAI;AAAA,SAC5D;AACN,WAAO,IAAI,OAAO,MAAM,GAAG,IAAI,OAAO,yBAAyB,WAAW;AAC1E,QAAI,SAAS;AACZ,aAAO,IAAI;AAAA;AAAA;AAAA;AAWd,sBAAsB,OAAsB;AAC3C,QAAM,SAAS,QAAQ;AACvB,QAAM,QAAe,KAAK,KAAK,MAAM;AACrC,QAAM,SAAS,oBAAI;AACnB,QAAM,OAAO,SAAU,SAAiB,SAAe;AACtD,QAAI,OAAO,IAAI,UAAU;AACxB;AAAA;AAED,WAAO,IAAI;AACX,UAAM,MAAM,MAAM,CAAC,SAAS;AAAA;AAE7B,SAAO,eAAe,OAAO,WAAW;AAAA,IACvC,MAAM;AACL,aAAO,OAAO;AAAA;AAAA;AAGhB,SAAO,eAAe,OAAO,QAAQ;AAAA,IACpC,MAAM;AACL,aAAO;AAAA;AAAA;AAGT,SAAO;AAAA;AAGD,IAAM,MAAM;AAAA,EAClB,OAAO,aAAa;AAAA,EACpB,MAAM,aAAa;AAAA,EACnB,MAAM,aAAa;AAAA,EACnB,OAAO,aAAa;AAAA,EACpB;AAAA;AAGM,6BAA6B,UAAqB,SAA0B;AAClF,QAAM,EAAE,SAAS,QAAQ,YAAY;AACrC,QAAM,OAAO,UAAU,YAAY;AACnC,QAAM,qBAAqB,qCAAU,OAAO,CAAC,MAAM,CAAC,sBAAsB,GAAG,SAAS;AACtF,QAAM,gBAAgB,mBAAmB,UAAU;AACnD,GAAC,GAAG,oBAAoB,GAAG,eAAe,QAAQ,CAAC,YAAY;AAC9D,QAAI,QAAQ;AACX,aAAO,SAAS;AAAA,WACV;AACN,WAAK;AAAA;AAAA;AAAA;AAKR,+BACC,SACA,SACA,SACU;AACV,SACE,CAAC,WAAW,QAAQ,SAAS,yBAC7B,CAAC,WAAW,2BAA2B;AAAA;AAI1C,oCAAoC,SAAkB;AAErD,SAAO,QAAQ,SAAS,yBAAyB,QAAQ,QAAQ,SAAS;AAAA;AAG3E,4BAA4B,UAAqB,SAA6B;AAC7E,QAAM,gBAAgB;AACtB,MAAI,CAAC,SAAS;AACb,UAAM,4BAA4B,SAAS,OAAO,CAAC,MAAM,2BAA2B;AACpF,QAAI,0BAA0B,SAAS,GAAG;AAEzC,YAAM,2BACL,0BAA0B,0BAA0B,SAAS;AAC9D,oBAAc,KAAK,iCACf,2BADe;AAAA,QAElB,MAAM;AAAA,QACN,SAAS;AAAA;AAAA;AAAA;AAIZ,SAAO;AAAA;AAGR,iBAAiB,GAAY;AAC5B,MAAI,KAAK,WAAW,IAAI,KAAK,wBAAwB;AAAA;AAGtD,mBAAmB,GAAY;AAC9B,MAAI,KAAK,WAAW,IAAI,KAAK,wBAAwB,IAAI,EAAE;AAAA;AAGrD,iCAAiC,GAAY;AACnD,QAAM,QAAQ;AACd,MAAI,EAAE,UAAU;AACf,UAAM,KAAK,EAAE;AAAA;AAEd,MAAI,EAAE,OAAO;AACZ,UAAM,KAAK,KAAK,EAAE,MAAM,MAAM,KAAK,EAAE,MAAM;AAAA;AAE5C,MAAI,EAAE,SAAS;AACd,QAAI,MAAM,SAAS,GAAG;AACrB,YAAM,KAAK;AAAA;AAEZ,UAAM,KAAK,EAAE;AAAA;AAEd,SAAO,MAAM,KAAK;AAAA;;;ACjKnB,+BACC,gBACA,KACA,eACA,OACA,SAC+B;AAC/B,QAAM,EAAE,MAAM,WAAW;AAEzB,QAAM,WAAW,MAAM,MAAM;AAC7B,MAAI,CAAC,UAAU;AAEd,QAAI,MAAM,8BAA8B,cAAc;AACtD;AAAA;AAED,QAAM,YAAY,MAAM,OAAO;AAE/B,QAAM,UAAU,MAAM;AACtB,QAAM,cAA2B,MAAM,eAAc,eAAe,SAAS;AAC7E,QAAM,OAAO;AAEb,QAAM,kBAAkB,oBAAI;AAE5B,QAAM,YAAY,OAAO,YAAY,cAAc,cAAc;AACjE,QAAM,aAAa,OAAO,YAAY,cAAc,cAAc;AAClE,QAAM,aAAa,aAAa,WAAW,WAAW,YAAY,SAAS;AAC3E,MAAI,YAAY;AACf,QAAI,MAAM;AACV,oBAAgB,IAAI;AAAA;AAErB,QAAM,YACL,cAAc,UAAU,UAAU,YAAY,SAAS,IAAI,cAAc;AAC1E,MAAI,WAAW;AACd,QAAI,MAAM;AACV,oBAAgB,IAAI;AAAA;AAGrB,MAAI,CAAC,WAAW;AAEf,wBAAoB,YAAY,SAAS,UAAU;AAAA;AAGpD,QAAM,SAAS,CAAC,GAAG,iBAAiB,OAAO;AAG3C,QAAM,yBAAyB,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE;AACxD,MAAI,uBAAuB,SAAS,GAAG;AACtC,QAAI,MAAM,wBAAwB,uBAAuB,IAAI,CAAC,MAAM,EAAE,IAAI,KAAK;AAC/E,2BAAuB,QAAQ,CAAC,eAAe,OAAO,YAAY,iBAAiB;AAAA;AAEpF,MAAI,OAAO,SAAS,GAAG;AACtB,QAAI,MACH,uBAAuB,cAAc,cAAc,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,KAAK;AAAA;AAGlF,SAAO;AAAA;AAGR,oBAAoB,MAAa,MAAsB;AACtD,SAAO,CAAC,YAAY,6BAAM,MAAM,6BAAM;AAAA;AAGvC,mBAAmB,MAAa,MAAa,UAA4B;AACxE,QAAM,SAAS,6BAAM;AACrB,QAAM,SAAS,6BAAM;AACrB,QAAM,gBAAgB,YAAY,QAAQ;AAC1C,MAAI,eAAe;AAClB,WAAO;AAAA;AAER,QAAM,eAAe,YAAY,gBAAgB,SAAS,gBAAgB;AAC1E,MAAI,CAAC,iBAAiB,cAAc;AACnC,QAAI,KACH,0CAA0C;AAAA;AAG5C,SAAO,CAAC;AAAA;AAGT,qBAAqB,MAAe,MAAwB;AAC3D,MAAI,CAAC,QAAQ,CAAC,MAAM;AACnB,WAAO;AAAA;AAER,MAAK,CAAC,QAAQ,QAAU,QAAQ,CAAC,MAAO;AACvC,WAAO;AAAA;AAER,SAAO,SAAS;AAAA;AAUjB,yBAAyB,MAAmC;AAC3D,MAAI,CAAC,MAAM;AACV,WAAO;AAAA;AAER,SAAO,KAAK,QAAQ,uCAAuC;AAAA;;;AC5G5D,sBAA0C;AAE1C,wBAA8B;;;ACH9B,aAAwB;AAExB,IAAM,SAAS,uBAAO,OAAO;AAG7B,IAAM,cAAc;AAEb,wBAAwB,OAAe;AAC7C,MAAI,OAAO,QAAQ;AAClB,WAAO,OAAO;AAAA;AAKf,QAAM,MAAM,AAAO,kBAAW;AAC9B,MAAI,OAAO;AACX,QAAM,OAAO,OAAO,IAAI,OAAO,WAAW,OAAO,GAAG;AACpD,SAAO,SAAS;AAChB,SAAO;AAAA;AAGR,IAAM,eAA0C;AAAA,EAC/C,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA;AAGN,IAAM,YAAY,IAAI,OAAO,IAAI,OAAO,KAAK,cAAc,KAAK,QAAQ;AAExE,gBAAgB,QAAgB;AAC/B,SAAO,OAAO,QAAQ,WAAW,CAAC,MAAM,aAAa;AAAA;;;ADtBtD,IAAM,uBAAuB,CAAC,YAC7B,8BACC,eACA,MACA,SACuB;AAbzB;AAcE,QAAM,EAAE,UAAU,oBAAoB,OAAO,QAAQ;AACrD,QAAM,EAAE,UAAU,SAAS;AAC3B,QAAM,eAAe;AAErB,QAAM,iBAAiC,iCACnC,QAAQ,kBAD2B;AAAA,IAEtC;AAAA,IACA,UAAU,MAAM,QAAQ;AAAA;AAEzB,MAAI,QAAQ,OAAO,QAAQ,SAAS;AACnC,UAAM,OAAO,KAAK,eAAe;AACjC,QAAI,MAAM,mBAAmB,YAAY;AACzC,mBAAe,UAAU,MAAM;AAAA;AAEhC,MAAI,OAAO,eAAe,oBAAoB,OAAO;AACpD,QAAI,OAAO,eAAe,oBAAoB,UAAU;AACvD,qBAAe,gBAAgB,MAAM;AAAA,WAC/B;AACN,qBAAe,kBAAkB,EAAE,IAAI,MAAM,KAAK;AAAA;AAAA;AAIpD,MAAI;AAEJ,MAAI,QAAQ,YAAY;AACvB,QAAI;AACH,qBAAe,MAAM,gCAAW,MAAM,QAAQ,YAAY,EAAE;AAAA,aACpD,GAAP;AACD,QAAE,UAAU,6BAA6B,WAAW,EAAE,UAAU,MAAM,EAAE,YAAY;AACpF,YAAM;AAAA;AAGP,QAAI,aAAa;AAAc,mBAAa,KAAK,GAAG,aAAa;AACjE,QAAI,aAAa;AAAK,qBAAe,YAAY,aAAa;AAAA;AAE/D,QAAM,YAAY,eAAe,aAAa,OAAO;AACrD,QAAM,wBAAwB,MAAM,qBAAQ,iBAAR,mBAAsB,0BAAtB,4BAA8C;AAAA,IACjF;AAAA,IACA,MAAM;AAAA,IACN;AAAA;AAED,MAAI,yBAAyB,IAAI,MAAM,SAAS;AAC/C,QAAI,MACH,gCAAgC,aAAa,KAAK,UAAU;AAAA;AAG9D,QAAM,sBAAsB,wBACzB,kCACG,iBACA,yBAEH;AACH,QAAM,WAAW,6BAAQ,WAAW;AAEpC,MAAI,WAAW,SAAS,IAAI,MAAM;AAEjC,aAAS,GAAG,QAAQ;AAAA,SAAY,KAAK,UAAU;AAAA;AAAA;AAIhD,MAAI,CAAC,OAAO,SAAS;AACpB,aAAS,GAAG,OAAO,QAAQ;AAAA,MAC1B,IAAI;AAAA,MACJ,cAAc,SAAS,GAAG;AAAA,MAC1B,YAAY,QAAQ;AAAA,MACpB;AAAA,MACA,cAAc;AAAA,MACd,gBAAgB;AAAA;AAAA;AAIlB,WAAS,GAAG,eAAe;AAE3B,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIH,sBAAsB,SAA0B;AAjGhD;AAkGC,QAAM,eAAe,QAAQ,QAAQ,SAAS,QAAQ,WAAW,CAAC,QAAQ;AAC1E,MAAI,cAAc;AAEjB,UAAM,SAAS,yCAAS,QAAT,mBAAc;AAE7B,UAAM,UAAU,yCAAS,QAAT,mBAAc;AAC9B,WAAO,qCAAc;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY,iBAAE,WAAW,QAAU,QAAQ;AAAA;AAAA;AAAA;AAKvC,6BAA6B,SAA0B;AAC7D,QAAM,UAAU,aAAa;AAC7B,SAAO,qBAAqB;AAAA;;;AElH7B,yBAA6B;AAE7B,kBAA8B;AAC9B,SAAoB;AAEpB,IAAM,iBAAiB;AACvB,IAAM,aAAa,QAAQ,aAAa;AAuBxC,iBAAiB,IAAY;AAC5B,QAAM,QAAQ,GAAG,MAAM,KAAK;AAC5B,QAAM,WAAW,MAAM;AACvB,QAAM,WAAW,MAAM;AACvB,SAAO,EAAE,UAAU;AAAA;AAGpB,8BACC,IACA,UACA,UACA,MACA,WACA,KAC4B;AAC5B,QAAM,QAAQ,kBAAkB;AAChC,MAAI,MAAM,OAAO,MAAM,KAAK;AAE3B;AAAA;AAED,QAAM,qBAAqB,UAAU,UAAU;AAC/C,QAAM,QAAQ,sBAAsB,UAAU,MAAM;AAEpD,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIF,+BAA+B,UAAkB,MAAc,MAAwB;AACtF,QAAM,QAAQ,CAAC,UAAU,QAAQ;AACjC,MAAI,SAAS,SAAS;AACrB,UAAM,KAAK;AAAA;AAEZ,MAAI,aAAa,UAAU,OAAO;AACjC,eAAW,OAAO;AAAA,aACR,SAAS,WAAW,iBAAiB;AAC/C,eAAW,aACR,SAAS,MAAM,eAAe,UAC9B,SAAS,MAAM,eAAe,SAAS;AAAA;AAG3C,SAAO,GAAG,YAAY,MAAM,KAAK;AAAA;AAGlC,2BAA2B,UAAgC;AAC1D,QAAM,QAAQ,OAAO,YAAY,IAAI,gBAAgB;AACrD,aAAW,OAAO,OAAO;AACxB,QAAI,MAAM,SAAS,IAAI;AAEtB,YAAM,OAAO;AAAA;AAAA;AAGf,SAAO;AAAA;AASR,mBAAmB,UAAkB,gBAAwB;AAC5D,SAAO,UAAU,+BAAc,WAAW;AAAA;AAG3C,sBAAsB,UAAkB,MAAc;AACrD,MAAI,SAAS,WAAW,iBAAiB;AACxC,WAAO;AAAA;AAER,SAAO,AAAG,cAAW,OAAO;AAAA;AAG7B,mBAAmB,oBAA4B,gBAAwB;AACtE,SAAO,mBAAmB,WAAW,iBAAiB,OACnD,mBAAmB,MAAM,eAAe,UACxC;AAAA;AAGJ,qBACC,SACA,SACA,YACgC;AAChC,QAAM,eAAe,qCAAa,SAAS;AAC3C,SAAO,CAAC,aAAa,aAAa,aAAa,WAAW,KAAK,CAAC,QAAQ,SAAS,SAAS;AAAA;AAIpF,uBAAuB,SAAoC;AACjE,QAAM,EAAE,SAAS,SAAS,YAAY,SAAS;AAC/C,QAAM,iBAAiB,+BAAc;AACrC,QAAM,SAAS,YAAY,SAAS,SAAS;AAC7C,SAAO,CAAC,IAAI,KAAK,YAAY,KAAK,UAAU;AAC3C,UAAM,EAAE,UAAU,aAAa,QAAQ;AACvC,QAAI,OAAO,WAAW;AACrB,aAAO,qBAAqB,IAAI,UAAU,UAAU,gBAAgB,WAAW;AAAA;AAAA;AAAA;;;AClIlF,mBAOO;;;ACRP,oBAA8B;AAC9B,kBAAiB;AACjB,gBAAe;AACf,iBAA8B;AAQ9B,IAAI;AAEG,IAAM,yBAAyB;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA;AAMD,IAAM,uBAAuB,IAAI,SAChC,QACA;AAGD,gCACC,YACA,eACwC;AACxC,QAAM,aAAa,iBAAiB,YAAY;AAChD,MAAI,YAAY;AACf,QAAI;AAEJ,QAAI,WAAW,SAAS,UAAU,WAAW,SAAS,SAAS;AAC9D,UAAI;AACH,cAAM,SAAS,MAAM,qBAAqB,8BAAc,YAAY;AACpE,YAAI,UAAU,MAAM;AACnB,iBAAO,iCACH,SADG;AAAA,YAEN;AAAA;AAAA,eAEK;AACN,gBAAM,IAAI,MAAM,qBAAqB;AAAA;AAAA,eAE9B,GAAP;AACD,YAAI,MAAM,2BAA2B,cAAc;AACnD,cAAM;AAAA;AAAA;AAIR,QAAI,CAAC,WAAW,SAAS,SAAS;AACjC,UAAI;AAEH,cAAM,WAAW,gBACb,4BAAe,iCAAc,kBAC9B;AAGH,eAAO,SAAS,MAAM,SAAS,QAAQ;AACvC,cAAM,SAAS,SAAS;AACxB,YAAI,UAAU,MAAM;AACnB,iBAAO,iCACH,SADG;AAAA,YAEN;AAAA;AAAA,eAEK;AACN,gBAAM,IAAI,MAAM,qBAAqB;AAAA;AAAA,eAE9B,GAAP;AACD,YAAI,MAAM,4BAA4B,cAAc;AACpD,YAAI,CAAC,KAAK;AACT,gBAAM;AAAA;AAAA;AAAA;AAKT,UAAM;AAAA;AAAA;AAIR,0BAA0B,YAAwB,eAAiC;AAClF,QAAM,OAAO,WAAW,QAAQ,QAAQ;AACxC,MAAI,cAAc,YAAY;AAC7B,UAAM,cAAc,oBAAK,WAAW,cAAc,cAC/C,cAAc,aACd,oBAAK,QAAQ,MAAM,cAAc;AACpC,QAAI,CAAC,kBAAG,WAAW,cAAc;AAChC,YAAM,IAAI,MAAM,qCAAqC;AAAA;AAEtD,WAAO;AAAA,SACD;AACN,UAAM,2BAA2B,uBAC/B,IAAI,CAAC,cAAc,oBAAK,QAAQ,MAAM,YACtC,OAAO,CAAC,SAAS,kBAAG,WAAW;AACjC,QAAI,yBAAyB,WAAW,GAAG;AAC1C,UAAI,MAAM,6BAA6B;AACvC;AAAA,eACU,yBAAyB,SAAS,GAAG;AAC/C,UAAI,KACH,iDAAiD,yBAAyB,iCAC1E;AAAA;AAGF,WAAO,yBAAyB;AAAA;AAAA;;;ACzGlC,IAAM,2BAA2B,CAAC,UAAU,eAAe;AAEpD,IAAM,6BAA6B,CAAC,UAAU,GAAG;AAEjD,IAAM,iBAAiB;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAGM,IAAM,qBAAqB;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA;;;AFGD,mBAAiB;;;AGpBjB,mBAAiB;AACjB,iBAAe;AACf,qBAA8B;AAEvB,oCAAoC,MAAc,cAAc,MAA0B;AAChG,MAAI,MAAM,4DAA4D;AACtE,QAAM,UAAU,qBAAK,KAAK,MAAM;AAChC,MAAI,CAAC,mBAAG,WAAW,UAAU;AAC5B,QAAI,aAAa;AAChB,YAAM,MAAM,QAAQ;AACpB,UAAI,SAAS,KAAK;AACjB,YAAI,MAAM,sCAAsC;AAChD,eAAO,2BAA2B,KAAK;AAAA;AAAA;AAGzC,QAAI,KAAK;AACT,WAAO;AAAA;AAGR,QAAM,MAAM,SAAS;AACrB,MAAI,CAAC,KAAK;AACT,WAAO;AAAA;AAGR,QAAM,OAAO;AAAA,IACZ,GAAG,OAAO,KAAK,IAAI,gBAAgB;AAAA,IACnC,GAAG,OAAO,KAAK,IAAI,mBAAmB;AAAA,IACrC,OAAO,CAAC,QAAQ,CAAC,+BAA+B;AAElD,SAAO,sBAAsB,MAAM;AAAA;AAGpC,+BACC,MACA,QACA,QAAiB,IACI;AACrB,QAAM,SAAS;AACf,QAAM,eAAe,kCAAc,GAAG;AACtC,QAAM,eAAe,KACnB,IAAI,CAAC,QAAQ,sBAAsB,KAAK,eACxC,OAAO;AACT,aAAW,EAAE,KAAK,SAAS,cAAc;AACxC,UAAM,OAAO,wBAAwB;AACrC,QAAI,CAAC;AAAM;AACX,WAAO,KAAK,EAAE,MAAM,IAAI,MAAM,MAAM,KAAK,KAAK;AAE9C,QAAI,SAAS,uBAAuB,IAAI,cAAc;AACrD,UAAI,kBAAkB,OAAO,KAAK,IAAI;AACtC,YAAM,WAAW,gBAAgB,OAAO,CAAC,SAAS,MAAK,SAAS;AAChE,UAAI,SAAS,SAAS,GAAG;AACxB,YAAI,KAAK,WACR,IAAI,KACH,iFACA,SAAS,IAAI,CAAC,MAAM,MAAK,OAAO,GAAG,KAAK;AAE1C,0BAAkB,gBAAgB,OAAO,CAAC,SAAS,CAAC,MAAK,SAAS;AAAA;AAEnE,UAAI,MAAK,WAAW,GAAG;AACtB,YAAI,MAAM,KAAK,4CAA4C,MAAK,KAAK;AAAA;AAEtE,aAAO,KAAK,GAAG,sBAAsB,iBAAiB,KAAK,MAAK,OAAO,IAAI;AAAA;AAAA;AAG7E,SAAO;AAAA;AAGD,+BACN,KACA,cACwB;AACxB,MAAI;AACH,UAAM,UAAU,GAAG;AACnB,UAAM,MAAM,aAAa;AACzB,UAAM,MAAM,qBAAK,QAAQ,aAAa,QAAQ;AAC9C,WAAO,EAAE,KAAK;AAAA,WACN,GAAP;AACD,QAAI,MAAM,KAAK,cAAc,oCAAoC;AAEjE,QAAI;AACH,UAAI,MAAM,qBAAK,QAAQ,aAAa,QAAQ;AAC5C,aAAO,KAAK;AACX,cAAM,MAAM,SAAS,KAAK;AAC1B,YAAI,OAAO,IAAI,SAAS,KAAK;AAC5B,iBAAO,EAAE,KAAK;AAAA;AAEf,cAAM,SAAS,qBAAK,QAAQ;AAC5B,YAAI,WAAW,KAAK;AACnB;AAAA;AAED,cAAM;AAAA;AAAA,aAEC,IAAP;AACD,UAAI,MAAM,KAAK,8CAA8C,OAAO;AAAA;AAAA;AAGtE,MAAI,MAAM,KAAK,qBAAqB;AAAA;AAGrC,kBAAkB,KAAa,SAAS,OAAmB;AAC1D,QAAM,UAAU,qBAAK,KAAK,KAAK;AAC/B,MAAI;AACH,WAAO,KAAK,MAAM,mBAAG,aAAa,SAAS;AAAA,WACnC,GAAP;AACD,KAAC,UAAU,IAAI,KAAK,WAAW,IAAI,KAAK,mBAAmB,WAAW;AAAA;AAAA;AAIxE,iCAAiC,KAA4C;AAC5E,MAAI,qBAAqB,MAAM;AAC9B,WAAO;AAAA,aACG,YAAY,MAAM;AAC5B,WAAO;AAAA,SACD;AACN,WAAO;AAAA;AAAA;AAIT,8BAA8B,KAAU;AACvC,SAAO,CAAC,CAAC,IAAI;AAAA;AAGd,qBAAqB,KAAU;AA3H/B;AA4HC,SAAO,CAAC,CAAC,WAAI,iBAAJ,mBAAkB,WAAU,CAAC,CAAC,WAAI,qBAAJ,mBAAsB;AAAA;AAG9D,IAAM,2CAA2C;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAED,IAAM,uCAAuC;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAWM,wCAAwC,YAA6B;AAC3E,SACC,yCAAyC,SAAS,eAClD,qCAAqC,KACpC,CAAC,YACA,QAAO,WAAW,OACf,WAAW,WAAW,WACtB,WAAW,UAAU,WAAW,YAAY,OAAO,GAAG,WAAW;AAAA;AAKjE,2BAA2B,KAAa,cAAoC;AAClF,QAAM,UAAU,sBAAsB,KAAK;AAC3C,MAAI,CAAC;AAAS,WAAO;AACrB,QAAM,MAAM,QAAQ;AAGpB,QAAM,QAAQ,IAAI,QAAQ,CAAC,IAAI,UAAU,CAAC,IAAI;AAC9C,MAAI,CAAC;AAAO,WAAO;AAGnB,QAAM,WAAW,qBAAK,QAAQ,IAAI;AAClC,SAAO,CAAC,YAAY,aAAa,SAAS,aAAa;AAAA;;;AH3KxD,qBAA8B;;;AIvB9B,iBAA+B;AAC/B,uBAAoC;;;ACS7B,uBAAuB,OAAwB,SAAuC;AAC5F,QAAM,EAAE,UAAU,OAAO,OAAO,MAAM,MAAM,UAAU;AACtD,QAAM,cAA2B;AAAA,IAChC;AAAA,IACA,IAAI;AAAA,IACJ,SAAS,wBAAwB;AAAA,IACjC,OAAO,mBAAmB;AAAA,IAC1B;AAAA,IACA,OAAO,QAAQ,WAAW,QAAQ,WAAW,CAAC,QAAQ,QAAQ;AAAA;AAE/D,MAAI,OAAO;AACV,gBAAY,MAAM;AAAA,MACjB,MAAM,MAAM;AAAA,MACZ,QAAQ,MAAM;AAAA,MACd,MAAM;AAAA;AAAA;AAGR,SAAO;AAAA;AAQD,wBAAwB,OAAwB,SAA0C;AAChG,QAAM,EAAE,UAAU,OAAO,OAAO,UAAU;AAC1C,QAAM,iBAAiC;AAAA,IACtC,MAAM,wBAAwB;AAAA;AAE/B,MAAI,OAAO;AACV,mBAAe,WAAW;AAAA,MACzB,MAAM,MAAM;AAAA,MACZ,QAAQ,MAAM;AAAA,MACd,MAAM;AAAA,MACN,UAAU,cAAc,MAAM,MAAM;AAAA;AAAA;AAGtC,MAAI,QAAQ,WAAW,QAAQ,WAAW,CAAC,OAAO;AACjD,mBAAe,SAAS;AAAA;AAEzB,SAAO;AAAA;AAMR,uBAAuB,QAAgB,OAAwB;AAC9D,MAAI,CAAC,OAAO;AACX,WAAO;AAAA;AAER,QAAM,QAAQ,MAAM,MAAM;AAC1B,QAAM,YAAY,MAAM,KAAK,CAAC,SAAS,KAAK,YAAY,WAAW,GAAG;AACtE,SAAO,YAAY,UAAU,UAAU,UAAU,QAAQ,QAAQ,KAAK;AAAA;AAuBvE,4BAA4B,OAAwB;AACnD,MAAI,CAAC,OAAO;AACX,WAAO;AAAA;AAER,SAAO,MACL,MAAM,MACN,IAAI,CAAC,SAAU,KAAK,MAAM,YAAY,QAAQ,OAAO,MAAM,KAAK,QAAQ,KAAK,QAC7E,KAAK;AAAA;;;ADjFD,IAAM,gCAAgC;AAEtC,6BAA6B,SAAyC;AAC5E,SAAO;AAAA,IACN,MAAM;AAAA,IACN,MAAM,OAAO;AACZ,iCAA2B;AAE3B,YAAM,mBAAoB,SAAQ,cAAc,CAAC,YAAY,IAAI,CAAC,QAAQ,IAAI,MAAM;AACpF,YAAM,eAAe,IAAI,OAAO,SAAS,iBAAiB,KAAK,OAAO;AAEtE,YAAM,OAAO,EAAE,QAAQ,gBAAgB,OAAO,EAAE,MAAM,eAAe;AACpE,cAAM,OAAO,MAAM,oBAAG,SAAS,UAAU;AACzC,YAAI;AACH,gBAAM,WAAW,MAAM,cAAc,SAAS,EAAE,UAAU;AAC1D,iBAAO,EAAE;AAAA,iBACD,GAAP;AACD,iBAAO,EAAE,QAAQ,CAAC,eAAe,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAOzC,oCAAoC,OAA2B;AApC/D;AAqCC,QAAM,yBAAyB,YAAM,eAAe,YAArB,mBAA8B,KAC5D,CAAC,MAAM,EAAE,SAAS;AAGnB,MAAI,CAAC;AAAwB;AAG7B,QAAM,SAAS,uBAAuB,MAAM,KAAK;AACjD,yBAAuB,QAAQ,SAAU,QAAO;AAC/C,UAAM,aAAa,OAAM,UAAU,KAAK;AACxC,WAAM,YAAY,SAAU,SAAS,UAAU;AAC9C,UAAI,QAAQ,OAAO,OAAO,SAAS,WAAW;AAC7C,gBAAQ,SAAS,IAAI,OACpB,QAAQ,OAAO,OAAO,QAAQ,WAAW,KACzC,QAAQ,OAAO;AAAA;AAGjB,aAAO,WAAW,SAAS;AAAA;AAE5B,WAAO,OAAO;AAAA;AAAA;AAIhB,6BACC,SACA,EAAE,UAAU,QACM;AA/DnB;AAgEC,QAAM,iBAAiC,iCACnC,QAAQ,kBAD2B;AAAA,IAEtC,KAAK;AAAA,IACL;AAAA,IACA,QAAQ;AAAA,IACR,UAAU;AAAA;AAGX,MAAI;AAEJ,MAAI,QAAQ,YAAY;AACvB,QAAI;AACH,qBAAe,MAAM,iCAAW,MAAM,QAAQ,YAAY,EAAE;AAAA,aACpD,GAAP;AACD,QAAE,UAAU,6BAA6B,WAAW,EAAE,UAAU,MAAM,EAAE,YAAY;AACpF,YAAM;AAAA;AAEP,QAAI,aAAa;AAAK,qBAAe,YAAY,aAAa;AAAA;AAG/D,QAAM,YAAY,eAAe,aAAa,OAAO;AAErD,QAAM,wBAAwB,MAAM,qBAAQ,iBAAR,mBAAsB,0BAAtB,4BAA8C;AAAA,IACjF;AAAA,IACA,MAAM;AAAA,IACN;AAAA;AAGD,MAAI,yBAAyB,IAAI,MAAM,SAAS;AAC/C,QAAI,MAAM,gCAAgC,aAAa,KAAK,UAAU;AAAA;AAGvE,QAAM,sBAAsB,wBACzB,kCACG,iBACA,yBAEH;AAEH,QAAM,WAAW,8BAAQ,WAAW;AAEpC,SAAO,SAAS,GAAG,OAAO,0BAA0B,SAAS,GAAG,IAAI;AAAA;;;AEzGrE,mBAMO;AACP,2BAAwB;AACxB,uBAA2B;;;ACR3B,0BAAgD;AAGhD,gCACC,MACA,IACA,SAC8B;AAC9B,MAAI,kBAAkB,aAAqB;AAC3C,MAAI;AACH,UAAM,SAAS,MAAM,OAAO;AAC5B,uBAAmB,OAAO;AAC1B,kBAAc,OAAO;AACrB,kBAAc,OAAO;AAAA,WACb,GAAP;AACD,QAAI,MAAM,KACT;AAED,WAAO;AAAA;AAGR,QAAM,MAAM,IAAI;AAChB,QAAM,QAAQ,IAAI,UAAU,MAAM;AAClC,MAAI,qBAAqB;AACzB,QAAM,IAAI,IAAI,4BAAY,MAAM;AAChC,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,UAAM,OAAO,MAAM;AACnB,UAAM,WAAW,MAAM,IAAI;AAC3B,QAAI,KAAK,OAAO,aAAa;AAC5B,UAAI,sCAAW,QAAO,aAAa;AAElC,UAAE,UAAU,KAAK,MAAM,KAAK,GAAG,QAAQ,SAAS;AAChD;AAAA,aACM;AACN,UAAE,OAAO,KAAK,MAAM,KAAK,GAAG;AAAA;AAE7B,aAAO,KAAK,GAAG;AAAA,eACL,KAAK,OAAO,aAAa;AACnC,UAAI,UAAU;AACb,UAAE,YAAY,KAAK,KAAK;AAAA,aAClB;AACN,UAAE,OAAO,KAAK;AAAA;AAAA,WAET;AAEN,aAAO,KAAK,GAAG;AAAA;AAAA;AAIjB,SAAO;AAAA;AAGR,8BAAqC,MAAc,IAAY,UAAmB;AAEjF,QAAM,IAAI,MAAM,iBAAiB,MAAM,IAAI,EAAE;AAC7C,SAAO,IAAI,EAAE,mBAAmB,EAAE,QAAQ,UAAU,OAAO,MAAM,gBAAgB,WAAW;AAAA;;;AD1C7F,IAAM,sBAAsB,CAAC,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,UAAU;AAE9E,IAAM,uBAAuB,CAAC;AAE9B,wCAAsD;AACrD,SAAO,OAAO,EAAE,YAAY,SAAS,WAAW,SAAS;AACxD,UAAM,OAAO,WAAW;AACxB,QAAI,CAAC,qBAAqB,SAAS;AAAO;AAC1C,UAAM,kBAAkB,MAAM,uCAAqB,SAAS,UAAU;AAAA,MACrE,QAAQ;AAAA,MACR,aAAa;AAAA,QACZ,iBAAiB;AAAA,UAEhB,wBAAwB;AAAA,UACxB,sBAAsB;AAAA;AAAA;AAAA;AAIzB,WAAO;AAAA,MACN,MAAM,gBAAgB;AAAA,MACtB,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAKxB,qCAAqC,QAAsC;AAC1E,QAAM,aAAa;AACnB,QAAM,SAAS,OAAO,QAAQ,KAAK,CAAC,MAAM,EAAE,SAAS;AACrD,MAAI,CAAC,QAAQ;AACZ,UAAM,IAAI,MAAM,yBAAyB;AAAA;AAE1C,MAAI,CAAC,OAAO,WAAW;AACtB,UAAM,IAAI,MAAM,UAAU;AAAA;AAE3B,QAAM,kBAAkB,OAAO,UAAW,KAAK;AAC/C,SAAO,OAAO,EAAE,YAAY,SAAS,WAAW,SAAS;AAjD1D;AAkDE,UAAM,OAAO,WAAW;AACxB,QAAI,CAAC,oBAAoB,SAAS;AAAO;AACzC,UAAM,WAAW,GAAG,YAAY;AAChC,UAAM,kBAAoC,MAAM,gBAC/C,SACA;AAGD,QAAI,6BAAgB,QAAhB,mBAAqB,YAArB,mBAA+B,QAAO,UAAU;AACnD,sBAAgB,IAAI,QAAQ,KAAK;AAAA;AAElC,WAAO;AAAA,MACN,MAAM,gBAAgB;AAAA,MACtB,KAAK,gBAAgB,OAAO;AAAA;AAAA;AAAA;AAK/B,qCAAqC,QAA2C;AAC/E,SAAO;AAAA,IACN,OAAO,EAAE,SAAS,YAAY;AAC7B,aAAO,iCACN,SACA;AAAA,QACC,QAAQ;AAAA,QACR,OAAO,4BAA4B;AAAA,SAEpC,EAAE;AAAA;AAAA;AAAA;AAYN,4DAA+E;AAC9E,SAAO;AAAA,IACN,MAAM,EAAE,SAAS,YAAY;AAC5B,YAAM,IAAI,IAAI,6BAAY;AAC1B,QAAE,OAAO;AACT,aAAO;AAAA,QACN,MAAM,EAAE;AAAA,QACR,KAAK,EAAE,mBAAmB,EAAE,QAAQ,UAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAMzD,iCAAiC,SAA0B,QAAwB;AAtGnF;AAuGC,QAAM,uBAA4C;AAClD,QAAM,sBAA2C;AAEjD,MAAI,cAAQ,iBAAR,mBAAsB,mBAAmB;AAC5C,QAAI,MAAM;AACV,yBAAqB,KAAK,4BAA4B;AAAA;AAIvD,QAAM,qCAAqC,OAAO,QAAQ,OAAO,CAAC,MAAM,uBAAG;AAC3E,MAAI,mCAAmC,SAAS,GAAG;AAClD,QAAI,KACH,wKAAwK,mCACtK,IAAI,CAAC,MAAM,EAAE,MACb,KAAK;AAGR,uCAAmC,QAAQ,CAAC,MAAM;AACjD,UAAI,CAAC,EAAE,KAAK;AACX,UAAE,MAAM;AAAA;AAET,UAAI,EAAE,IAAI,qBAAqB,QAAW;AAEzC,UAAE,IAAI,mBAAmB,EAAE;AAAA,aACrB;AACN,YAAI,MACH,uCAAuC,EAAE;AAAA;AAAA;AAAA;AAM7C,QAAM,2BAAqC,OAAO,QAAQ,OAAO,CAAC,MAAG;AAvItE;AAuIyE,yCAAG,QAAH,oBAAQ;AAAA;AAChF,QAAM,UAAoB,IACzB,WAAqB;AACtB,aAAW,KAAK,0BAA0B;AACzC,QACC,QAAQ,8BAA8B,QACrC,MAAM,QAAQ,QAAQ,8BACtB,eAAQ,8BAAR,mBAAmC,SAAS,EAAE,QAC9C;AACD,cAAQ,KAAK;AAAA,WACP;AACN,eAAS,KAAK;AAAA;AAAA;AAGhB,MAAI,QAAQ,SAAS,GAAG;AACvB,QAAI,MACH,gEAAgE,QAC9D,IAAI,CAAC,MAAM,EAAE,MACb,KAAK;AAAA;AAGT,MAAI,SAAS,SAAS,GAAG;AACxB,QAAI,MACH,8DAA8D,SAC5D,IAAI,CAAC,MAAM,EAAE,MACb,KAAK;AAER,wBAAoB,KAAK,GAAG,yBAAyB,IAAI,CAAC,MAAM,EAAE,IAAI;AAAA;AAGvE,MAAI,QAAQ,OAAO,QAAQ,SAAS;AACnC,wBAAoB,KAAK;AAAA;AAG1B,SAAO,EAAE,sBAAsB;AAAA;AAGzB,+BAA+B,SAA0B,QAAwB;AA5KxF;AA6KC,QAAM,EAAE,sBAAsB,wBAAwB,wBAAwB,SAAS;AACvF,MAAI,qBAAqB,SAAS,KAAK,oBAAoB,SAAS,GAAG;AACtE,QAAI,CAAC,QAAQ,YAAY;AACxB,cAAQ,aAAa,CAAC,GAAG,sBAAsB,GAAG;AAAA,eACxC,MAAM,QAAQ,QAAQ,aAAa;AAC7C,cAAQ,WAAW,QAAQ,GAAG;AAC9B,cAAQ,WAAW,KAAK,GAAG;AAAA,WACrB;AACN,cAAQ,aAAa,CAAC,GAAG,sBAAsB,QAAQ,YAAY,GAAG;AAAA;AAAA;AAGxE,QAAM,4BAA4B,CAAC,CAAC,eAAQ,iBAAR,mBAAsB;AAC1D,MAAI,QAAQ,cAAc,2BAA2B;AACpD,YAAQ,aAAa,MAAM,QAAQ,QAAQ,cACxC,QAAQ,WAAW,IAAI,CAAC,GAAG,MAAM,+BAA+B,GAAG,MACnE,+BAA+B,QAAQ,YAAY;AAAA;AAAA;AAIxD,wCAAwC,OAA0B,GAA8B;AAC/F,QAAM,UAA6B;AAEnC,aAAW,CAAC,eAAe,gBAAgB,OAAO,QAAQ,QAGvD;AACF,YAAQ,iBAAiB,OAAO,YAAY;AAvM9C;AAwMG,YAAM,SAAS,MAAM,YAAY;AAEjC,UAAI,UAAU,OAAO,SAAS,QAAQ,SAAS;AAC9C,YAAI,aAAa;AACjB,YAAI,CAAC,OAAO,KAAK;AAChB,uBAAa;AACb,cAAI,KAAK,WACR,IAAI,KAAK,KACR,yBAAyB,oCAAoC,2BAC7D;AAAA,YACC,UAAU,QAAQ;AAAA,YAClB,MAAM;AAAA,YACN,WAAW,YAAY;AAAA;AAAA,mBAGf,cAAO,QAAP,mBAAoB,cAAa,IAAI;AAChD,uBAAa;AACb,cAAI,KAAK,WACR,IAAI,KAAK,KACR,yBAAyB,6CAA6C,2BACtE;AAAA,YACC,UAAU,QAAQ;AAAA,YAClB,MAAM;AAAA,YACN,WAAW,YAAY;AAAA;AAAA;AAI3B,YAAI,YAAY;AACf,cAAI;AACH,kBAAM,MAAM,MAAM,eAAe,QAAQ,SAAS,OAAO,MAAM,QAAQ;AACvE,gBAAI,KAAK;AACR,kBAAI,MAAM,WACT,IAAI,MACH,wDAAwD,QAAQ;AAElE,qBAAO,MAAM;AAAA;AAAA,mBAEN,GAAP;AACD,gBAAI,MAAM,6BAA6B;AAAA;AAAA;AAAA;AAI1C,aAAO;AAAA;AAAA;AAIT,SAAO;AAAA;;;AN3NR,IAAM,eAAe,oBAAI,IAAI;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAGM,+BAA+B,eAAkC;AACvE,QAAM,cAAc,OAAO,KAAK,iBAAiB,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa,IAAI;AACvF,MAAI,YAAY,QAAQ;AACvB,QAAI,KAAK,2BAA2B,YAAY,KAAK,oBAAoB;AAAA;AAAA;AAK3E,iCACC,gBAAkC,IAClC,gBACA,SAC8B;AAC9B,QAAM,6BAAyC,iCAC3C,iBAD2C;AAAA,IAE9C,MAAM,gBAAgB;AAAA;AAEvB,QAAM,iBAAmC;AAAA,IACxC,YAAY,CAAC;AAAA,IACb,SAAS;AAAA,IACT,iBAAiB;AAAA,MAChB,QAAQ;AAAA;AAAA;AAGV,QAAM,eAAe,MAAM,iBAAiB,4BAA4B;AACxE,QAAM,SAAS,+DACX,iBACA,eACA,gBAHW;AAAA,IAId,iBAAiB,iDACb,iDAAgB,kBAChB,6CAAc,kBACd,+CAAe;AAAA,IAEnB,cAAc,iDACV,iDAAgB,eAChB,6CAAc,eACd,+CAAe;AAAA,IAGnB,MAAM,2BAA2B;AAAA,IACjC,SAAS,QAAQ,YAAY;AAAA,IAC7B,SAAS,QAAQ,YAAY;AAAA,IAC7B,SAAS,QAAQ,IAAI,SAAS;AAAA;AAI/B,MAAI,6CAAc,YAAY;AAC7B,WAAO,aAAa,aAAa;AAAA;AAElC,SAAO;AAAA;AAKD,wBACN,oBACA,YACkB;AAClB,QAAM,iBAAmC;AAAA,IACxC,KAAK,WAAW,eAAe,QAAQ,EAAE,WAAW,CAAC,mBAAkB;AAAA,IACvE,iBAAiB;AAAA,MAChB,KAAK,CAAC,mBAAkB;AAAA,MACxB,KAAK,CAAC,WAAW;AAAA;AAAA;AAGnB,QAAM,SAA0B,gDAC5B,iBACA,qBAF4B;AAAA,IAG/B,iBAAiB,kCACb,eAAe,kBACf,mBAAkB;AAAA,IAEtB,MAAM,WAAW;AAAA,IACjB,cAAc,WAAW;AAAA;AAE1B,wBAAsB,QAAQ;AAC9B,uBAAqB;AACrB,8BAA4B;AAC5B,SAAO;AAAA;AAGR,8BAA8B,SAA0B;AACvD,MAAI,QAAQ,KAAK;AAChB,QAAI,CAAC,QAAQ,gBAAgB,KAAK;AACjC,UAAI,KAAK;AACT,cAAQ,gBAAgB,MAAM;AAAA;AAE/B,QAAI,QAAQ,SAAS;AACpB,UAAI,QAAQ,QAAQ,QAAQ,QAAQ,IAAI,WAAW;AAClD,YAAI,KAAK;AACT,gBAAQ,IAAI,YAAY;AAAA;AAEzB,UAAI,QAAQ,gBAAgB,KAAK;AAChC,YAAI,KACH;AAED,gBAAQ,gBAAgB,MAAM;AAAA;AAAA,WAEzB;AACN,UAAI,QAAQ,QAAQ,QAAQ,CAAC,QAAQ,IAAI,WAAW;AACnD,YAAI,KACH;AAED,YAAI,QAAQ,QAAQ,MAAM;AACzB,kBAAQ,MAAM,EAAE,WAAW;AAAA,eACrB;AACN,kBAAQ,IAAI,YAAY;AAAA;AAAA;AAG1B,UAAI,CAAC,QAAQ,gBAAgB,KAAK;AACjC,YAAI,KACH;AAED,gBAAQ,gBAAgB,MAAM;AAAA;AAAA;AAAA;AAAA;AAMlC,qCAAqC,SAA0B;AAC9D,MAAI,QAAQ,cAAc;AACzB,QAAI,QAAQ,KAAK;AAChB,UAAI,KAAK;AACT,cAAQ,MAAM;AAAA;AAEf,QAAI,QAAQ,gBAAgB,KAAK;AAChC,UAAI,KACH;AAED,cAAQ,gBAAgB,MAAM;AAAA;AAAA;AAAA;AAQjC,yBAAyB,YAA4C;AACpE,SAAO,gCAAc,WAAW,OAAO,qBAAK,QAAQ,WAAW,QAAQ,QAAQ;AAAA;AAGzE,8BACN,SACA,QACA,WACsB;AAEtB,QAAM,aAAa,2BAA2B,QAAQ;AACtD,QAAM,kBAAuC;AAAA,IAC5C,SAAS;AAAA,MACR,YAAY,CAAC,GAAG;AAAA,MAChB,QAAQ,CAAC,GAAG,gBAAgB,GAAG;AAAA;AAAA;AAQjC,MAAI,UAAU,YAAY,SAAS;AAClC,oBAAgB,eAAe,2BAC9B,YACA,SACA,OAAO;AAAA;AAKT,kBAAgB,MAAM,yBAAyB,YAAY,SAAS;AAEpE,SAAO;AAAA;AAGR,oCACC,YACA,SACA,eACyB;AAEzB,QAAM,UAAoB;AAC1B,QAAM,UAAoB,CAAC;AAC3B,QAAM,aAAa,CAAC,QAAa;AAhOlC;AAgOqC,mBAAQ,SAAS,QAAQ,sDAAc,YAAd,mBAAuB,SAAS;AAAA;AAC7F,QAAM,aAAa,CAAC,QAAgB;AAjOrC;AAkOE,WACC,QAAQ,SAAS,QAGjB,sDAAc,YAAd,mBAAuB,KAAK,CAAC,OAAe,QAAQ,MAAM,GAAG,WAAW,GAAG;AAAA;AAG7E,MAAI,CAAC,WAAW,WAAW;AAC1B,UAAM,yBAAyB,eAAe,OAAO,CAAC,MAAM,MAAM;AAClE,QAAI,MACH,wDAAwD,uBAAuB,KAAK;AAErF,YAAQ,KAAK,GAAG,uBAAuB,OAAO,CAAC,MAAM,CAAC,WAAW;AAAA,SAC3D;AACN,QAAI,MAAM;AAAA;AAIX,MAAI,QAAQ,aAAa,0BAA0B;AAClD,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA,gBAAgB;AAAA,QACf,SAAS,CAAC,EAAE,MAAM,+BAA+B,OAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAMjE,eAAa,WAAW,OAAO,CAAC,QAAQ,IAAI,SAAS;AAErD,QAAM,sBAAsB,MAAM,KAAK,IAAI,IAAI,WAAW,IAAI,CAAC,QAAQ,IAAI,QAAQ,OAClF,CAAC,QAAQ,CAAC,WAAW;AAEtB,MAAI,MAAM,sDAAsD,oBAAoB,KAAK;AACzF,UAAQ,KAAK,GAAG,oBAAoB,OAAO,CAAC,MAAM,CAAC,WAAW;AAE9D,MAAI,QAAQ,iCAAiC,MAAM;AAClD,UAAM,uBAAuB,QAAQ,gCAAgC;AACrE,QAAI,qBAAqB,SAAS,GAAG;AACpC,UAAI,MAAM,8CAA8C;AAAA;AAEzD,UAAM,0BAA0B,WAC9B,OAAO,CAAC,QAAQ,CAAC,qBAAqB,SAAS,IAAI,SAAS,WAAW,IAAI,OAC3E,QAAQ,CAAC,QAAQ;AACjB,YAAM,eAAe,kCAAc,GAAG,IAAI;AAC1C,aAAO,OAAO,KAAK,IAAI,IAAI,gBAAgB,IACzC,OAAO,CAAC,aAAa,CAAC,WAAW,aAAa,kBAAkB,UAAU,eAC1E,IAAI,CAAC,aAAa,IAAI,KAAK,OAAO,IAAI,MAAM,UAAU,KAAK;AAAA;AAE/D,QAAI,MACH,uEACA;AAED,YAAQ,KAAK,GAAG;AAAA;AAGjB,SAAO,EAAE,SAAS;AAAA;AAGnB,kCACC,YACA,SACA,QACM;AAlSP;AAmSC,QAAM,aAAuB;AAI7B,MAAI,QAAQ,WAAW,cAAO,UAAP,mBAAc,MAAK;AAEzC,QAAI,CAAC,oBAAO,QAAP,mBAAY,aAAZ,mBAAsB,SAAS,YAAW;AAC9C,iBAAW,KAAK;AAAA;AAAA,SAEX;AAKN,iBAAa,WAAW,OAAO,CAAC,QAAQ,IAAI,SAAS;AAAA;AAItD,aAAW,KACV,GAAG,MAAM,KAAK,IAAI,IAAI,WAAW,IAAI,CAAC,MAAM,EAAE,QAAQ,OAAO,CAAC,MAAM;AAtTtE;AAwTG,WAAO,CAAC,sBAAO,QAAP,oBAAY,aAAZ,oBAAsB,SAAS,OAAM,CAAC,qBAAO,iBAAP,oBAAqB,YAArB,mBAA8B,SAAS;AAAA;AAGvF,SAAO;AAAA,IACN;AAAA;AAAA;AAIK,iCAAiC,YAA4B,SAA0B;AAhU9F;AAiUC,QAAM,4BAA4B,uBAAW,aAAa,mBAAxB,mBAAwC,YAAxC,mBAAiD,KAClF,CAAC,WAAW,OAAO,SAAS;AAE7B,MAAI,2BAA2B;AAC9B,WAAO,OAAO,2BAA2B,oBAAoB;AAAA;AAAA;;;AQlUxD,kCAA4B;AAAA,EAA5B,cAHP;AAIS,gBAAO,oBAAI;AACX,eAAM,oBAAI;AACV,yBAAgB,oBAAI;AACpB,uBAAc,oBAAI;AAClB,iCAAwB,oBAAI;AAAA;AAAA,EAE7B,OAAO,aAA0B;AACvC,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,mBAAmB;AAAA;AAAA,EAGjB,UAAU,aAA0B;AAC3C,SAAK,KAAK,IAAI,YAAY,oBAAoB,YAAY,SAAS;AAAA;AAAA,EAG5D,SAAS,aAA0B;AAC1C,QAAI,CAAC,YAAY,KAAK;AAErB,WAAK,IAAI,IAAI,YAAY,oBAAoB,YAAY,SAAS;AAAA;AAAA;AAAA,EAI5D,mBAAmB,aAA0B;AACpD,UAAM,KAAK,YAAY;AACvB,UAAM,mBAAmB,KAAK,cAAc,IAAI,OAAO;AACvD,UAAM,eAAe,YAAY;AACjC,SAAK,cAAc,IAAI,IAAI;AAC3B,UAAM,UAAU,iBAAiB,OAAO,CAAC,MAAM,CAAC,aAAa,SAAS;AACtE,UAAM,QAAQ,aAAa,OAAO,CAAC,MAAM,CAAC,iBAAiB,SAAS;AACpE,UAAM,QAAQ,CAAC,MAAM;AACpB,UAAI,CAAC,KAAK,YAAY,IAAI,IAAI;AAC7B,aAAK,YAAY,IAAI,GAAG,oBAAI;AAAA;AAE7B,WAAK,YAAY,IAAI,GAAI,IAAI,YAAY;AAAA;AAE1C,YAAQ,QAAQ,CAAC,MAAM;AACtB,WAAK,YAAY,IAAI,GAAI,OAAO,YAAY;AAAA;AAAA;AAAA,EAIvC,OAAO,eAAuC;AACpD,UAAM,KAAK,cAAc;AACzB,QAAI,UAAU;AACd,QAAI,KAAK,IAAI,OAAO,KAAK;AACxB,gBAAU;AAAA;AAEX,QAAI,KAAK,KAAK,OAAO,KAAK;AACzB,gBAAU;AAAA;AAEX,UAAM,eAAe,KAAK,cAAc,IAAI;AAC5C,QAAI,cAAc;AACjB,gBAAU;AACV,mBAAa,QAAQ,CAAC,MAAM;AAC3B,cAAM,aAAa,KAAK,YAAY,IAAI;AACxC,YAAI,cAAc,WAAW,IAAI,cAAc,WAAW;AACzD,qBAAW,OAAO,cAAc;AAAA;AAAA;AAGlC,WAAK,cAAc,OAAO;AAAA;AAE3B,WAAO;AAAA;AAAA,EAGD,OAAO,eAA8B;AAC3C,WAAO,KAAK,KAAK,IAAI,cAAc;AAAA;AAAA,EAG7B,MAAM,eAA8B;AAC1C,QAAI,CAAC,cAAc,KAAK;AAEvB,aAAO,KAAK,IAAI,IAAI,cAAc;AAAA;AAAA;AAAA,EAI7B,cAAc,OAAwB;AAC5C,UAAM,aAAa,KAAK,YAAY,IAAI;AACxC,WAAO,aAAa,CAAC,GAAG,cAAc;AAAA;AAAA,EAGhC,uBAAuB,MAAc,UAAkC;AAC7E,WAAO,KAAK,sBAAsB,IAAI,KAAK,2BAA2B,MAAM;AAAA;AAAA,EAGtE,uBACN,UACA,WAA+B,QAC/B,gBACC;AACD,SAAK,sBAAsB,IAC1B,KAAK,2BAA2B,UAAU,WAC1C;AAAA;AAAA,EAIM,2BAA2B,UAAkB,UAA2B;AAC/E,WAAO,WAAW,GAAG,cAAc,aAAa;AAAA;AAAA;;;ACnGlD,iBAAe;AAKf,mBAAiB;AAGV,uBACN,SACA,OACA,eACC;AACD,QAAM,EAAE,QAAQ,YAAY,qBAAqB;AACjD,MAAI,CAAC,QAAQ;AACZ;AAAA;AAED,QAAM,EAAE,SAAS,OAAO;AACxB,QAAM,EAAE,MAAM,QAAQ,iBAAiB,OAAO;AAE9C,QAAM,8BAA8B,CAAC,aAAqB;AACzD,UAAM,aAAa,MAAM,cAAc;AACvC,eAAW,QAAQ,CAAC,cAAc;AACjC,UAAI,mBAAG,WAAW,YAAY;AAC7B,YAAI,MACH,sCAAsC,mCAAmC;AAE1E,gBAAQ,KAAK,UAAU;AAAA;AAAA;AAAA;AAK1B,QAAM,0BAA0B,CAAC,aAAqB;AACrD,UAAM,gBAAgB,cAAc,UAAU;AAC9C,QAAI,eAAe;AAClB,YAAM,mBAAmB,MAAM,OAAO;AACtC,UAAI,kBAAkB;AACrB,YAAI,MAAM,kDAAkD;AAAA;AAAA;AAAA;AAK/D,QAAM,qBAAqB,CAAC,aAAqB;AAChD,QAAI,aAAa,gBAAgB;AAGhC,YAAM,UACL;AACD,UAAI,KAAK,SAAS;AAClB,SAAG,KAAK;AAAA,QACP,MAAM;AAAA,QACN,KAAK,EAAE,SAAS,OAAO,IAAI,QAAQ,sBAAsB,IAAI;AAAA;AAAA,WAExD;AACN,UAAI,KAAK,0DAA0D;AACnE,aAAO;AAAA;AAAA;AAIT,QAAM,wBAAwB,uBAAuB,IAAI,CAAC,QAAQ,qBAAK,KAAK,MAAM;AAClF,QAAM,qBAAqB,CAAC,aAAqB;AAChD,QAAI,sBAAsB,SAAS,WAAW;AAC7C,yBAAmB;AAAA;AAAA;AAIrB,QAAM,wBAAwB,CAAC,aAAqB;AACnD,QAAI,aAAa,kBAAkB;AAClC,yBAAmB;AAAA;AAAA;AAKrB,QAAM,qBAAqB;AAAA,IAC1B,KAAK;AAAA,IACL,QAAQ,CAAC;AAAA,IACT,QAAQ,CAAC,yBAAyB;AAAA;AAEnC,MAAI,kBAAkB;AACrB,uBAAmB,OAAO,KAAK;AAC/B,uBAAmB,OAAO,KAAK;AAAA,SACzB;AACN,uBAAmB,IAAI,KAAK;AAAA;AAG7B,SAAO,QAAQ,oBAAoB,QAAQ,CAAC,CAAC,KAAK,eAAe;AAChE,QAAI,UAAU,SAAS,GAAG;AACzB,cAAQ,GAAG,KAAK,CAAC,aAAa,UAAU,QAAQ,CAAC,aAAa,SAAS;AAAA;AAAA;AAAA;AAKnE,2BAA2B,SAAoB,MAAqB,MAAoB;AAC9F,MACC,QAEA,CAAC,KAAK,WAAW,OAAO,QAExB,CAAC,KAAK,SAAS,SACf,mBAAG,WAAW,OACb;AAED,YAAQ,IAAI,qBAAK,QAAQ;AAAA;AAAA;;;ACvG3B,mBAAiB;AACjB,qBAA8C;AAIvC,qCACN,UACA,UACA,OACgB;AAChB,MACC,YACA,aAAa,aACb,CAAC,eAAe,aAChB,CAAC,+BAA+B,WAC/B;AACD,UAAM,SAAS,MAAM,uBAAuB,UAAU;AACtD,QAAI,QAAQ;AACX,aAAO;AAAA;AAER,UAAM,eAAe,kCAAc;AACnC,UAAM,UAAU,sBAAsB,UAAU;AAChD,QAAI,SAAS;AACZ,YAAM,EAAE,KAAK,QAAQ;AACrB,UAAI,IAAI,QAAQ;AACf,cAAM,SAAS,qBAAK,QAAQ,KAAK,IAAI;AACrC,cAAM,uBAAuB,UAAU,UAAU;AACjD,eAAO;AAAA;AAAA,WAEF;AACN,YAAM,IAAI,MAAM,qCAAqC,wBAAwB;AAAA;AAAA;AAAA;AAKhF,wBAAwB,UAAkB;AACzC,SAAO,SAAS,WAAW,YAAY,8BAAe,SAAS;AAAA;AAGhE,sBAAsB,UAA2B;AAChD,MACC,CAAC,YACD,SAAS,OAAO,OAChB,SAAS,OAAO,QAChB,SAAS,SAAS,QAClB,qBAAK,WAAW,WACf;AACD,WAAO;AAAA;AAER,QAAM,QAAQ,SAAS,MAAM;AAC7B,UAAQ,MAAM;AAAA,SACR;AACJ,aAAO;AAAA,SACH;AACJ,aAAO,MAAM,GAAG,WAAW;AAAA;AAE3B,aAAO;AAAA;AAAA;;;ACxDV,iBAAe;AACf,mBAAiB;AACjB,mBAA6C;AAI7C,IAAM,8BAAyD;AAAA,EAC9D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAGD,kCAAyC,SAA0B,YAA4B;AAC9F,MAAI,CAAC,QAAQ,aAAa,4BAA4B,CAAC,WAAW;AAAU;AAE5E,QAAM,mBAAmB,qBAAK,QAAQ,WAAW,UAAU;AAE3D,MAAI,CAAC,mBAAG,WAAW;AAAmB;AAEtC,QAAM,qBAAqB,qBAAK,QAAQ,WAAW,UAAU;AAC7D,QAAM,wBAAwB,KAAK,UAAU,uBAAuB,UAAU,CAAC,GAAG,UAAU;AAC3F,WAAO,OAAO,UAAU,aAAa,MAAM,aAAa;AAAA;AAGzD,MAAI,mBAAG,WAAW,qBAAqB;AACtC,UAAM,yBAAyB,mBAAG,aAAa,oBAAoB;AACnE,QAAI,2BAA2B;AAAuB;AAAA;AAGvD,QAAM,+BAAa,YAAY;AAC/B,qBAAG,cAAc,oBAAoB;AAAA;AAGtC,gCAAgC,SAA0B;AACzD,QAAM,WAAgC;AACtC,aAAW,OAAO,6BAA6B;AAC9C,aAAS,OAAO,QAAQ;AAAA;AAEzB,SAAO;AAAA;;;AlBlBD,gBAAgB,eAA0C;AAChE,MAAI,QAAQ,IAAI,SAAS,MAAM;AAC9B,QAAI,SAAS;AAAA;AAEd,wBAAsB;AACtB,QAAM,QAAQ,IAAI;AAClB,QAAM,qBAAqB,oBAAI;AAE/B,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI;AAOJ,MAAI;AAEJ,SAAO;AAAA,IACN,MAAM;AAAA,IAEN,SAAS;AAAA,UACH,OAAO,QAAQ,WAAyC;AAE7D,UAAI,QAAQ,IAAI,OAAO;AACtB,YAAI,SAAS;AAAA,iBACH,OAAO,UAAU;AAC3B,YAAI,SAAS,OAAO;AAAA;AAGrB,gBAAU,MAAM,kBAAkB,eAAe,QAAQ;AAEzD,YAAM,kBAAkB,qBAAqB,SAAS,QAAQ;AAC9D,UAAI,MAAM,0BAA0B;AACpC,aAAO;AAAA;AAAA,UAGF,eAAe,QAAQ;AAC5B,gBAAU,eAAe,SAAS;AAClC,8BAAwB,QAAQ;AAChC,sBAAgB,cAAc;AAC9B,uBAAgB,oBAAoB;AACpC,mBAAa;AACb,UAAI,MAAM,oBAAoB;AAAA;AAAA,UAGzB,aAAa;AAClB,YAAM,mBAAmB,SAAS;AAAA;AAAA,IAGnC,gBAAgB,QAAQ;AAEvB,cAAQ,SAAS;AACjB,oBAAc,SAAS,OAAO;AAAA;AAAA,IAG/B,KAAK,IAAI,MAAM;AAGd,YAAM,MAAe,SAAS,QAAQ,8BAAM;AAC5C,YAAM,gBAAgB,cAAc,IAAI,CAAC,CAAC;AAC1C,UAAI,eAAe;AAClB,cAAM,EAAE,UAAU,UAAU;AAE5B,YAAI,MAAM,UAAU,MAAM,SAAS,SAAS;AAC3C,gBAAM,MAAM,MAAM,OAAO;AACzB,cAAI,KAAK;AACR,gBAAI,MAAM,wBAAwB;AAClC,mBAAO;AAAA;AAAA;AAIT,YAAI,WAAW,cAAc,WAAW;AACvC,cAAI,MAAM,gCAAgC;AAC1C,iBAAO,mBAAG,aAAa,UAAU;AAAA;AAAA;AAAA;AAAA,UAK9B,UAAU,UAAU,UAAU,MAAM;AACzC,YAAM,MAAM,CAAC,CAAC,8BAAM;AACpB,YAAM,gBAAgB,cAAc,UAAU;AAC9C,UAAI,+CAAe,MAAM,QAAQ;AAChC,YAAI,cAAc,MAAM,SAAS,SAAS;AAGzC,cAAI,MAAM,yCAAyC,cAAc;AACjE,iBAAO,cAAc;AAAA;AAEtB,YAAI,MAAM,sBAAsB;AAChC,eAAO;AAAA;AAGR,UAAI,OAAO,aAAa,UAAU;AACjC,YAAI,CAAC,mBAAmB;AACvB,8BAAoB,KAAK,QAAQ,cAAc,QAAW,EAAE,UAAU,QAAQ,KAC7E,CAAC,cAAc;AACd,gBAAI,MAAM;AACV,mBAAO;AAAA,aAER,CAAC,QAAQ;AACR,gBAAI,MACH,sFACA;AAED,mBAAO;AAAA;AAAA;AAIV,eAAO;AAAA;AAGR,UAAI;AACH,cAAM,WAAW,4BAA4B,UAAU,UAAU;AACjE,YAAI,UAAU;AACb,cAAI,MAAM,sBAAsB,6CAA6C;AAC7E,iBAAO;AAAA;AAAA,eAEA,KAAP;AACD,2BAAmB,IAAI;AAAA;AAAA;AAAA,UAInB,UAAU,MAAM,IAAI,MAAM;AArJlC;AAsJG,YAAM,MAAM,CAAC,CAAC,8BAAM;AACpB,YAAM,gBAAgB,cAAc,IAAI;AACxC,UAAI,CAAC,eAAe;AACnB;AAAA;AAED,YAAM,EAAE,UAAU,UAAU;AAE5B,UAAI,MAAM,QAAQ;AACjB,YAAI,MAAM,SAAS,SAAS;AAC3B,gBAAM,MAAM,MAAM,OAAO;AACzB,cAAI,KAAK;AACR,gBAAI,MAAM,6BAA6B;AACvC,mBAAO;AAAA;AAAA;AAGT,YAAI,MAAM,6CAA6C;AACvD,cAAM,IAAI,MAAM,oDAAoD;AAAA;AAErE,UAAI;AACJ,UAAI;AACH,sBAAc,MAAM,eAAc,eAAe,MAAM;AAAA,eAC/C,GAAP;AACD,cAAM,cAAc,GAAG;AAAA;AAExB,0BAAoB,YAAY,SAAS,UAAU;AACnD,YAAM,OAAO;AACb,UAAI,mBAAY,iBAAZ,mBAA0B,WAAU,QAAQ,QAAQ;AACvD,oBAAY,aAAa,QAAQ,CAAC,MAAM;AACvC,4BAAkB,QAAQ,OAAQ,SAAS,GAAG,QAAQ;AAAA;AAAA;AAGxD,UAAI,MAAM,qCAAqC;AAC/C,aAAO,YAAY,SAAS;AAAA;AAAA,IAG7B,gBAAgB,KAA2D;AAC1E,UAAI,CAAC,QAAQ,OAAO,CAAC,QAAQ,SAAS;AACrC;AAAA;AAED,YAAM,gBAAgB,cAAc,IAAI,MAAM,OAAO,IAAI;AACzD,UAAI,eAAe;AAClB,eAAO,gBAAgB,gBAAe,KAAK,eAAe,OAAO;AAAA;AAAA;AAAA,IAQnE,WAAW;AACV,UAAI,mBAAmB,OAAO,GAAG;AAChC,YAAI,KACH;AAAA;AAAA,OAEE,MAAM,KAAK,oBAAoB,CAAC,MAAM,KAAK,KAAK,KAAK,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;","names":[]}