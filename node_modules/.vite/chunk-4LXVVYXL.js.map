{
  "version": 3,
  "sources": ["../svelte/store/index.mjs"],
  "sourcesContent": ["import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n"],
  "mappings": ";;;;;;;;;AAGA,IAAM,mBAAmB;AAMzB,kBAAkB,OAAO,OAAO;AAC5B,SAAO;AAAA,IACH,WAAW,SAAS,OAAO,OAAO;AAAA;AAAA;AAQ1C,kBAAkB,OAAO,QAAQ,MAAM;AACnC,MAAI;AACJ,QAAM,cAAc,oBAAI;AACxB,eAAa,WAAW;AACpB,QAAI,eAAe,OAAO,YAAY;AAClC,cAAQ;AACR,UAAI,MAAM;AACN,cAAM,YAAY,CAAC,iBAAiB;AACpC,mBAAW,cAAc,aAAa;AAClC,qBAAW;AACX,2BAAiB,KAAK,YAAY;AAAA;AAEtC,YAAI,WAAW;AACX,mBAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK,GAAG;AACjD,6BAAiB,GAAG,GAAG,iBAAiB,IAAI;AAAA;AAEhD,2BAAiB,SAAS;AAAA;AAAA;AAAA;AAAA;AAK1C,kBAAgB,IAAI;AAChB,QAAI,GAAG;AAAA;AAEX,sBAAmB,KAAK,aAAa,MAAM;AACvC,UAAM,aAAa,CAAC,KAAK;AACzB,gBAAY,IAAI;AAChB,QAAI,YAAY,SAAS,GAAG;AACxB,aAAO,MAAM,QAAQ;AAAA;AAEzB,QAAI;AACJ,WAAO,MAAM;AACT,kBAAY,OAAO;AACnB,UAAI,YAAY,SAAS,GAAG;AACxB;AACA,eAAO;AAAA;AAAA;AAAA;AAInB,SAAO,EAAE,KAAK,QAAQ;AAAA;AAE1B,iBAAiB,QAAQ,IAAI,eAAe;AACxC,QAAM,SAAS,CAAC,MAAM,QAAQ;AAC9B,QAAM,eAAe,SACf,CAAC,UACD;AACN,QAAM,OAAO,GAAG,SAAS;AACzB,SAAO,SAAS,eAAe,CAAC,QAAQ;AACpC,QAAI,SAAS;AACb,UAAM,SAAS;AACf,QAAI,UAAU;AACd,QAAI,UAAU;AACd,UAAM,OAAO,MAAM;AACf,UAAI,SAAS;AACT;AAAA;AAEJ;AACA,YAAM,SAAS,GAAG,SAAS,OAAO,KAAK,QAAQ;AAC/C,UAAI,MAAM;AACN,YAAI;AAAA,aAEH;AACD,kBAAU,YAAY,UAAU,SAAS;AAAA;AAAA;AAGjD,UAAM,gBAAgB,aAAa,IAAI,CAAC,OAAO,MAAM,UAAU,OAAO,CAAC,UAAU;AAC7E,aAAO,KAAK;AACZ,iBAAW,CAAE,MAAK;AAClB,UAAI,QAAQ;AACR;AAAA;AAAA,OAEL,MAAM;AACL,iBAAY,KAAK;AAAA;AAErB,aAAS;AACT;AACA,WAAO,gBAAgB;AACnB,cAAQ;AACR;AAAA;AAAA;AAAA;",
  "names": []
}
